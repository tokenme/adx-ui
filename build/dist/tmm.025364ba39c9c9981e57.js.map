{"version":3,"sources":["webpack:///tmm.025364ba39c9c9981e57.js","webpack:///webpack/bootstrap 084d8f075e533e1190ce","webpack:///./src/tmm.js","webpack:///./node_modules/adlibs/lib/detect/browser.js","webpack:///./node_modules/adlibs/lib/detect/environment.js","webpack:///./node_modules/adlibs/lib/canHas.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","273","guid","s4","Math","floor","random","toString","substring","wrap","uid","document","write","genifr","tmmId","w","h","ifr","createElement","width","height","scrolling","frameBorder","marginHeight","marginWidth","getElementById","appendChild","os","browser","browserType","tablet","mobile","desktop","console","link","encodeURIComponent","window","location","referrer","environment","screen_h","screen_w","ad_w","ad_h","version","htm","ifrdom","contentWindow","open","close","detect","ready","tmm_id","tmm_width","tmm_height","274","can","has","kindleBrowser","results","map","MAX","EXCEED","OK","TYPE","MICROSOFT","FIREFOX","CHROME","OPERA","SAFARI","ANDROID","SAFARI_MOBILE","OPERA_MINI","OPERA_ANDROID","CHROME_MOBILE","MICROSOFT_MOBILE","FIREFOX_MOBILE","BLACKBERRY","KINDLE","WEBVIEW","UNKNOWN","UNKNOWN_MOBILE","Ua","this","Feature","Engine","Os","DEFAULT_VERSION","Browser","self","trustworthy","max","ua","feature","engine","mathMLSupport","hasMathML","createElementNS","mfrac","NAMESPACE","div","style","position","top","left","visibility","fontFamily","lineheight","createTextNode","body","offsetHeight","offsetWidth","isMobile","win","createEvent","e","save","result","push","length","getVersion","uaVersion","minVersion","maxVersion","actualVersion","looksLike","regex","test","parseIntIfMatch","radix","match","parseInt","parseFloatIfMatch","parseFloat","getAndroidVersion","nav","navigator","Infinity","getChromiumVersion","Image","getGeckoVersion","getTridentVersion","getTridentEngineVersion","ver","engineVersion","getSafariVersion","getKindleVersion","getOtherOS","otherBrowser","platform","getAppleOS","mac","iOS","appleBrowser","iOSVersion","macVersion","replace","getMicrosoftOS","microsoftBrowser","pcVersion","getAndroidOS","androidBrowser","getKindleOS","verison","getOsFromUa","userAgent","detectedBrowser","documentElement","opera","TRUSTWORTHY","BROWSER_NAME","BROWSER_VERSION","ENGINE_NAME","ENGINE_VERSION","OS_NAME","OS_VERSION","DESKTOP","MOBILE","TABLET","CONSOLE","isIE","isFF","isOpera","isChrome","isSafari","read","key","details","mathMLSupports","275","doc","getFramePosition","pos","parent","frames","getFrameDepth","myWin","depth","versionMatch","checkPlugin","plugin","description","getFlashVersion","pluginVersion","split","deviceWidth","pixelDensity","zoomRatio","parent_ads","PARENT_ADS","ad_order","ex","ad_depth","AD_ORDER","AD_DEPTH","screen","deviceXDPI","logicalXDPI","toFixed","innerHeight","abs","orientation","innerWidth","outerWidth","isFinite","zoom_ratio","pixel_density","ZOOM_RATIO","PIXEL_DENSITY","avail_w","avail_h","flash","dnt","doNotTrack","msDoNotTrack","doc_mode","SCREEN_W","SCREEN_H","AVAIL_W","AVAIL_H","AD_W","AD_H","FLASH","DNT","DOC_MODE","getAvailableScreenSize","getScreenSize","getAdDocSize","71","obj","propertyName","globalObjectName","scope","own","run","methodName","defaultRunnable","runnable","forIn","callback","keys","TypeError"],"mappings":"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","file":"tmm.025364ba39c9c9981e57.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 273);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 273:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function () {\n  var browser = __webpack_require__(274).detect();\n  var environment = __webpack_require__(275).detect();\n  function init(tmmId, w, h) {\n    var uid = guid();\n    wrap(uid);\n    genifr(uid, tmmId, w, h);\n  }\n  function guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n  function wrap(uid) {\n    document.write('<div id=\"' + uid + '\"></div>');\n  }\n  function genifr(uid, tmmId, w, h) {\n    var ifr = document.createElement('iframe');\n    ifr.width = w;\n    ifr.height = h;\n    ifr.scrolling = 'no';\n    ifr.frameBorder = 0;\n    ifr.marginHeight = 0;\n    ifr.marginWidth = 0;\n    var wrapper = document.getElementById(uid);\n    wrapper.appendChild(ifr);\n    var os = browser.os;\n    var browserType = 0;\n    if (browser.tablet) {\n      browserType = 3;\n    } else if (browser.mobile) {\n      browserType = 2;\n    } else if (browser.desktop) {\n      browserType = 1;\n    } else if (browser.console) {\n      browserType = 4;\n    }\n    var link = 'https://adx.tokenmama.io/c?a=' + encodeURIComponent(tmmId) + '&url=' + encodeURIComponent(window.location) + '&referrer=' + encodeURIComponent(document.referrer) + '&sw=' + environment.screen_h + '&sh=' + environment.screen_w + '&adw=' + environment.ad_w + '&adh=' + environment.ad_h + '&os_name=' + os.name + '&os_ver=' + os.version + '&bw_name=' + browser.name + '&bw_ver=' + browser.version + '&bw_type=' + browserType;\n    var htm = '<body><style>*{margin:0;padding:0}.imp{width:1px;height:1px;display:absolute;top:-1px;;left:-1px;}.img{width:100%;height:100%}.logo{position:absolute;bottom:0;right:-4px;z-index:10000;}a img{width:20px;height16px;}a:hover.logo{right:0}</style><a href=\"https://adx.tokenmama.io\" target=\"_blank\" class=\"logo\"><img src=\"https://tmm-adx.tianxi100.com/img/logo/ad.png?v=20180428\"></a><script src=\"https://tmm-adx.tianxi100.com/js/tmm-c.js\" type=\"text/javascript\"></script><script src=\"' + link + '\" type=\"text/javascript\"></script></body>';\n    var ifrdom = ifr.contentWindow.document;\n    ifrdom.open();\n    ifrdom.write(htm);\n    ifrdom.close();\n  }\n  document.ready = init(window.tmm_id, window.tmm_width, window.tmm_height);\n})(window);\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module Browser\n * @desc Browser Detection - Gets Data Pertaining to User's Browser and OS\n * @typicalname browser\n * @example\n * ```\n * var browser = require(\"adlibs/lib/detect/browser\")\n * ```\n */\n\n/**\n * @type Image\n * @property {String} srcset\n */\n\n/**\n * @type performance\n * @property {Object} timing\n * @property {Function} mark\n * @ignore\n */\n\n/**\n * @type document\n * @property {Number} uniqueID\n * @property {String} hidden\n * @property {Object} all\n * @property {String} documentMode\n * @property {String} visibilityState\n * @property {Document} documentElement\n * @property {Function} webkitRequestFullscreen\n * @ignore\n */\n\n/**\n * @type navigator\n * @property {String} platform\n * @property {Object} mozGetUserMedia\n * @property {Boolean} standalone\n * @property {Object} geolocation\n * @property {Object} mozBattery\n * @property {Object} webkitGetUserMedia\n * @property {String} userAgent\n * @property {Function} vibrate\n * @ignore\n */\n\n/**\n * @type browser\n * @property {String} name\n * @property {Boolean} trustworthy\n * @property {Boolean} desktop\n * @property {Boolean} mobile\n * @property {Boolean} tablet\n * @property {Boolean} console\n * @property {String} version\n * @property {UA} ua\n * @property {Feature} feature\n * @property {Engine} engine\n * @property {OS} os\n * @property {Function} setVersionAgainstUaVersion\n */\n\n/**\n * @type ua\n * @property {String} version\n */\n\n/**\n * @type feature\n * @property {String} version\n */\n\n/**\n * @type engine\n * @property {String} name\n * @property {String} version\n */\n\n/**\n * @type os\n * @property {String} name\n * @property {String} version\n */\n\n/**\n * @type style\n * @property {Object} KhtmlUserInput\n * @ignore\n */\n\n/**\n * @type URL\n * @property {Function} createObjectURL\n * @ignore\n */\n\n/**\n * @type history\n * @property {Object} replaceState\n * @ignore\n */\n\n/* This is a separator to keep the JSDOC from going insane */\n\nvar can = __webpack_require__(71).can,\n\thas = __webpack_require__(71).has,\n\tkindleBrowser = /Kindle|Silk|KFTT|KFOT|KFJWA|KFJWI|KFSOWI|KFTHWA|KFTHWI|KFAPWA|KFAPWI/i,\n\tresults = [],\n\tmap = {},\n\tDEFAULT_VERSION = -1,\n\tMAX = {\n\t\tEXCEED: 'ex',\n\t\tOK: 'ok'\n\t},\n\tMAX_BROWSER_VER = 1000,\n\tTYPE = {\n\t\tMICROSOFT: 1,\n\t\tFIREFOX: 2,\n\t\tCHROME: 3,\n\t\tOPERA: 4,\n\t\tSAFARI: 5,\n\t\tANDROID: 6,\n\t\tSAFARI_MOBILE: 7,\n\t\tOPERA_MINI: 8,\n\t\tOPERA_ANDROID: 9,\n\t\tCHROME_MOBILE: 10,\n\t\tMICROSOFT_MOBILE: 11,\n\t\tFIREFOX_MOBILE: 12,\n\t\tBLACKBERRY: 13,\n\t\tKINDLE: 14,\n\t\tWEBVIEW: 15,\n\t\tUNKNOWN: 16,\n\t\tUNKNOWN_MOBILE: 17\n\t};\n\n/**\n * @private\n * @returns {UA}\n * @constructor\n */\nvar Ua = function () {\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {Feature}\n * @constructor\n */\nvar Feature = function () {\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {Engine}\n * @constructor\n */\nvar Engine = function () {\n\tthis.name = '';\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {OS}\n * @constructor\n */\nvar Os = function () {\n\tthis.name = '';\n\tthis.version = DEFAULT_VERSION + '';\n};\n\n/**\n * @private\n * @returns {Browser} Returns the Browser instance\n * @constructor\n */\nvar Browser = function () {\n\tvar self = this; // here for minification purposes\n\tself.name = ''; // verified name\n\tself.trustworthy = true; // does the ua jive with the feature detection\n\tself.desktop = false; // is this a desktop browser\n\tself.mobile = false; // is this a mobile phone browser\n\tself.tablet = false; // is this a mobile tablet browser\n\tself.console = false; // is this a video game or other console browser\n\tself.max = MAX.OK; // by default the ua version matches what is available\n\tself.version = DEFAULT_VERSION; // full version\n\tself.ua = new Ua();\n\tself.feature = new Feature();\n\tself.engine = new Engine();\n\tself.os = new Os();\n};\n\n/**\n * Check for MathML support in browsers to help detect certain browser version numbers where this is the only difference.\n * @param {Document} d\n * @static\n * @returns {Boolean} returns true if browser has mathml support\n */\nvar mathMLSupport = function (d) {\n\n\t'use strict';\n\n\tvar hasMathML = false;\n\n\tif (d.createElementNS) {\n\t\tvar NAMESPACE = 'http://www.w3.org/1998/Math/MathML',\n\t\t\tdiv = d.createElement('div'),\n\t\t\tmfrac;\n\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.top = div.style.left = 0;\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.width = div.style.height = 'auto';\n\t\tdiv.style.fontFamily = 'serif';\n\t\tdiv.style.lineheight = 'normal';\n\n\t\tmfrac = div.appendChild(d.createElementNS(NAMESPACE,'math'))\n\t\t\t.appendChild(d.createElementNS(NAMESPACE,'mfrac'));\n\n\t\tmfrac.appendChild(d.createElementNS(NAMESPACE,'mi'))\n\t\t\t.appendChild(d.createTextNode('xx'));\n\n\t\tmfrac.appendChild(d.createElementNS(NAMESPACE,'mi'))\n\t\t\t.appendChild(d.createTextNode('yy'));\n\n\t\td.body.appendChild(div);\n\n\t\thasMathML = div.offsetHeight > div.offsetWidth;\n\t}\n\n\treturn hasMathML;\n};\n\n/**\n * Performs a simple test to see if we're on mobile or not.\n * @param {Window=} win\n * @static\n * @returns {Boolean} returns true if mobile\n */\nvar isMobile = function (win) {\n\n\twin = win || window;\n\n\ttry {\n\t\twin.document.createEvent('TouchEvent');\n\t\t// Surface tablets have touch events, so we use the Pointer Lock API to detect them\n\t\treturn !can(win.document, 'exitPointerLock') || !can(win.document, 'mozExitPointerLock');\n\t} catch (e) {\n\t\t// Opera Mini and IE10M don't support touch events\n\t\t// execCommand is only on desktop browsers\n\t\treturn !can(win.document, 'execCommand');\n\t}\n};\n\n\n/**\n * Saves a property to the results array and returns its index.\n * @param {*} result\n * @returns {Number}\n */\nvar save = function (result) {\n\tif (typeof result === 'boolean') {\n\t\tresults.push(result === true ? '1' : '0');\n\t} else if (typeof result === 'number') {\n\t\tresults.push(result + '');\n\t} else {\n\t\tresults.push(result);\n\t}\n\treturn results.length - 1;\n};\n\n\n/**\n * Uses the min and max versions of a browser to determine its version.\n * @param {Number} uaVersion\n * @param {Number} minVersion\n * @param {Number=} maxVersion\n * @static\n * @returns {Number} returns version number\n */\nvar getVersion = function (uaVersion, minVersion, maxVersion) {\n\tvar actualVersion = minVersion;\n\tif (uaVersion >= minVersion) {\n\t\tif (!maxVersion || uaVersion <= maxVersion) {\n\t\t\tactualVersion = uaVersion;\n\t\t} else if (maxVersion && uaVersion > maxVersion) {\n\t\t\tactualVersion = maxVersion;\n\t\t}\n\t}\n\treturn actualVersion;\n};\n\n/**\n * Searches for a match between the regex and specified string.\n * @param {RegExp} regex\n * @param {String} ua\n * @static\n * @returns {*|Boolean} returns true if match found\n */\nvar looksLike = function (regex, ua) {\n\t'use strict';\n\treturn regex.test(ua);\n};\n\n/**\n * Parses the result of the RegExp match if it exists.\n * Gracefully falls back to the default version if not.\n * @param {String} ua\n * @param {RegExp} regex\n * @param {Number=} radix\n * @static\n * @returns {Number} returns the regex match or default version\n */\nvar parseIntIfMatch = function (ua, regex, radix) {\n\treturn ua.match(regex) !== null ? parseInt(ua.match(regex)[1], radix || 10) : DEFAULT_VERSION;\n};\n\n/**\n * Parses the floating point value of the RegExp match if found.\n * Gracefully falls back to the default if not.\n * @param {String} ua\n * @param {RegExp} regex\n * @static\n * @returns  returns the regex match or the default version\n */\nvar parseFloatIfMatch = function (ua, regex) {\n\treturn ua.match(regex) !== null ? parseFloat(ua.match(regex)[1]) : DEFAULT_VERSION;\n};\n\n/**\n * Determines the version of Android being used.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the Android version\n */\nvar getAndroidVersion = function (win, uaVersion) {\n\n\tvar nav = win.navigator,\n\t\tandroidVersion = DEFAULT_VERSION;\n\n\tif (can(nav, 'sendBeacon')) {\n\t\tandroidVersion = getVersion(uaVersion, 5.0, Infinity);\n\t} else if (can(has('performance', win), 'now')) {\n\t\tandroidVersion = getVersion(uaVersion, 4.4);\n\t} else if (has('FileList', win)) {\n\t\tandroidVersion = getVersion(uaVersion, 4.0, 4.3);\n\t} else {\n\t\tandroidVersion = getVersion(uaVersion, 2.1, 4.0);\n\t}\n\n\treturn androidVersion;\n};\n\n/**\n * Determines the version of Chrome being used.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the Chrome version\n */\nvar getChromiumVersion = function (win, uaVersion) {\n\n\tvar chromiumVersion = DEFAULT_VERSION;\n\t// no session history management - version 4 - api\n\t// geolocation - version 5 - api\n\t// web notifications(prefixed) - version 5 - api\n\t// server-sent DOM events - version 6 - api\n\t// FileReader - version 6 - API\n\t// inline svg - version 7 - html5\n\t// typed arrays - version 7 - api\n\t// classList DOMTokenList - version 8 - API\n\t// defer attribute for external scripts - version 8 - html5\n\t// progress meter - version 8 - html5\n\t// matchMedia - version 9 - API\n\t// webP image format, partial support - version 9 - other\n\t// form validation - version 10 - html5\n\t// getComputedStyle - version 11 - html5\n\t// IndexedDB (prefixed)- version 11 - API\n\t// Details and summary elements - version 12 - html5\n\t// Navigation timing API - version 13 - API\n\t// File API, full support - version 13 - API\n\t// Web sockets, full support - version 14 - API\n\t// Full screen API (prefixed)- version 15 - API\n\t// WebGL, 3D Canvas Graphics - version 18 - API/HTML5 -- unreliable indicator\n\t// WebVVT - version 18 - other\n\t// Blob constructing - version 20 - API\n\t// high resolution time api (prefixed) - version 20 - API\n\t// Color input type - version 20 - HTML5\n\t// getUserMedia API - version 21 - API\n\t// web notifications - version 22 - api\n\t// touch events - version 22 - API/HTML5\n\t// Blob URLs - version 23 - API\n\t// WebRTC Peer Connection (prefixed)- version 23 - API\n\t// webP image format, full support - version 23 - other\n\t// requestAnimationFrame - version 24 - API\n\t// high resolution time api - version 24 - API\n\t// User timing API - version 25 - API\n\t// web speach api(prefixed) - version 25 - api\n\t// shadow dom, prefixed - version 25 - html5\n\t// HTML templates - version 26 - html5\n\t// mutation observer - version 27 - API\n\t// Canvas blend - version 30 - API\n\t// vibration API - version 30 - API\n\t// Promises - version 32 - api\n\t// page visibility - version 33 - api\n\t// Opus codec - version 33 - other\n\t// matches() DOM method - version 34 - API\n\t// srcset attribute - version 34 - api\n\t// shadow dom - version 35 - api/html5\n\t// toolbar/context menu - version 36 - html5\n\t// scoped css - version 36 - html5\n\tif (has('Proxy', win)) {\n\t\tchromiumVersion = getVersion(uaVersion, 49, MAX_BROWSER_VER);\n\t} else if (has('PushManager', win)) {\n\t\tchromiumVersion = getVersion(uaVersion, 44, 48);\n\t} else if (can(win.navigator, 'permissions')) {\n\t\tchromiumVersion = getVersion(uaVersion, 43);\n\t} else if (can(win.navigator, 'sendBeacon')) {\n\t\tchromiumVersion = getVersion(uaVersion, 39, 42);\n\t} else if (can(win.navigator, 'getBattery')) {\n\t\tchromiumVersion = getVersion(uaVersion, 38);\n\t} else if (can(has('crypto', win), 'subtle')) {\n\t\tchromiumVersion = getVersion(uaVersion, 37);\n\t} else if (can(new Image(), 'srcset')) { // Chrome 34+\n\t\tchromiumVersion = getVersion(uaVersion, 34, 36);\n\t} else if (can(win.document, 'visibilityState')) { // Chrome 33+\n\t\tchromiumVersion = getVersion(uaVersion, 33);\n\t} else if (has('Promise', win)) { // Chrome 32+\n\t\tchromiumVersion = getVersion(uaVersion, 32);\n\t} else if (can(win.navigator, 'vibrate')) { // Chrome 30+\n\t\tchromiumVersion = getVersion(uaVersion, 30, 31);\n\t} else if (has('MutationObserver', win)) { // Chrome 27+\n\t\tchromiumVersion = getVersion(uaVersion, 27, 29);\n\t} else if (can(win.document.createElement('template'), 'content')) { // Chrome 26+\n\t\tchromiumVersion = getVersion(uaVersion, 26);\n\t} else if (can(has('performance', win), 'mark')) { // Chrome 25+\n\t\tchromiumVersion = getVersion(uaVersion, 25);\n\t} else if (has('requestAnimationFrame', win)) { // Chrome 24+\n\t\tchromiumVersion = getVersion(uaVersion, 24);\n\t} else if (can(has('URL', win), 'createObjectURL')) { // Chrome 23+\n\t\tchromiumVersion = getVersion(uaVersion, 23);\n\t} else if (has('Notification', win)) { // Chrome 22+\n\t\tchromiumVersion = getVersion(uaVersion, 22);\n\t} else if (can(win.navigator, 'webkitGetUserMedia')) { // Chrome 21+\n\t\tchromiumVersion = getVersion(uaVersion, 21);\n\t} else if (has('Blob', win)) { // Chrome 20+\n\t\tchromiumVersion = getVersion(uaVersion, 20);\n\t} else if (can(win.document, 'webkitRequestFullscreen')) { // Chrome 15+\n\t\tchromiumVersion = getVersion(uaVersion, 15, 19);\n\t} else if (can(has('performance', win), 'timing')) { // Chrome 13+\n\t\tchromiumVersion = getVersion(uaVersion, 13, 14);\n\t} else if (can(win.document.createElement('details'), 'open')) { // Chrome 12+\n\t\tchromiumVersion = getVersion(uaVersion, 12);\n\t} else if (has('webkitIndexedDB', win)) { // Chrome 11+\n\t\tchromiumVersion = getVersion(uaVersion, 11);\n\t} else if (can(win.document.createElement('input'), 'checkValidity')) { // Chrome 10+\n\t\tchromiumVersion = getVersion(uaVersion, 10);\n\t} else if (has('matchMedia', win)) { // Chrome 9+\n\t\tchromiumVersion = getVersion(uaVersion, 9);\n\t} else if (can(win.document.createElement('_'), 'classList')) { // Chrome 8+\n\t\tchromiumVersion = getVersion(uaVersion, 8);\n\t} else if (has('Uint32Array', win)) { // Chrome 7+\n\t\tchromiumVersion = getVersion(uaVersion, 7);\n\t} else if (has('FileReader', win)) { // Chrome 6+\n\t\tchromiumVersion = getVersion(uaVersion, 6);\n\t} else if (has('webkitNotification', win)) { // Chrome 5+\n\t\tchromiumVersion = getVersion(uaVersion, 5);\n\t} else if (can(has('history', win), 'replaceState')) { // Chrome 4+\n\t\tchromiumVersion = getVersion(uaVersion, 4);\n\t} else {\n\t\tchromiumVersion = getVersion(uaVersion, 0, 3);\n\t}\n\treturn chromiumVersion;\n};\n\n/**\n * @private\n * @param {Window} win\n * @param {Number} uaVersion\n * @returns {Number}\n */\nvar getGeckoVersion = function (win, uaVersion) {\n\n\tvar geckoVersion = DEFAULT_VERSION,\n\t\td = win.document,\n\t\tnav = win.navigator;\n\t// Detect all versions of browsers who are using gecko as their rendering engine, prioritizing Firefox\n\n\t// all versions:\n\t// optimal version coverage:\n\t// versions accounted for:\n\t// versions covered by feature testing:\n\tif (has('PushManager', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 44, MAX_BROWSER_VER);\n\t} else if (has('MessageChannel', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 41, 43);\n\t} else if (has('fetch', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 39, 40);\n\t} else if (can(has('performance', win), 'mark')) {\n\t\tgeckoVersion = getVersion(uaVersion, 38);\n\t} else if (can(has('crypto', win), 'subtle')) {\n\t\tgeckoVersion = getVersion(uaVersion, 34, 37);\n\t} else if (can(win.navigator, 'sendBeacon')) {\n\t\tgeckoVersion = getVersion(uaVersion, 31, 33);\n\t} else if (has('SharedWorker', win)) { // FF 29+\n\t\tgeckoVersion = getVersion(uaVersion, 29, 30);\n\t} else if (has('AudioContext', win)) { // FF 25+\n\t\tgeckoVersion = getVersion(uaVersion, 25, 28);\n\t} else if (has('requestAnimationFrame', win)) { // FF 23+\n\t\tgeckoVersion = getVersion(uaVersion, 23, 24);\n\t} else if (has('Notification', win)) { // FF 22+\n\t\tgeckoVersion = getVersion(uaVersion, 22);\n\t} else if (can(d, 'hidden')) { // FF 18+\n\t\tgeckoVersion = getVersion(uaVersion, 18, 21);\n\t} else if (can(nav, 'mozGetUserMedia')) { // FF 17+\n\t\tgeckoVersion = getVersion(uaVersion, 17);\n\t} else if (has('indexedDB', win)) { // FF 16+\n\t\tgeckoVersion = getVersion(uaVersion, 16);\n\t} else if (can(has('performance', win), 'now')) { // FF 15+\n\t\tgeckoVersion = getVersion(uaVersion, 15);\n\t} else if (has('MutationObserver', win)) { // FF 14+\n\t\tgeckoVersion = getVersion(uaVersion, 14);\n\t} else if (has('Blob', win)) { // FF 13+\n\t\tgeckoVersion = getVersion(uaVersion, 13);\n\t} else if (has('WebSocket', win)) { // FF 11+\n\t\tgeckoVersion = getVersion(uaVersion, 11, 12);\n\t} else if (can(nav, 'mozBattery')) { // FF 10+\n\t\tgeckoVersion = getVersion(uaVersion, 10);\n\t} else if (can(has('performance', win), 'timing')) { // FF 7+\n\t\tgeckoVersion = getVersion(uaVersion, 7, 9);\n\t} else if (has('matchMedia', win)) { // FF 6+\n\t\tgeckoVersion = getVersion(uaVersion, 6);\n\t} else if (has('Uint32Array', win)) { // FF 4+\n\t\tgeckoVersion = getVersion(uaVersion, 4, 5);\n\t} else if (has('FileReader', win)) { // FF 3.6\n\t\tgeckoVersion = getVersion(uaVersion, 3.6);\n\t} else if (has('JSON', win)) { // FF 3.5+\n\t\tgeckoVersion = getVersion(uaVersion, 3.5);\n\t} else if (has('postMessage', win)) { // FF 3+\n\t\tgeckoVersion = getVersion(uaVersion, 3);\n\t} else {\n\t\tgeckoVersion = getVersion(uaVersion, 0, 2.9);\n\t}\n\n\treturn geckoVersion;\n};\n\n/**\n * @private\n * @param {Window} win\n * @param {Number} uaVersion\n * @returns {Number}\n */\nvar getTridentVersion = function (win, uaVersion) {\n\n\tvar tridentVersion = DEFAULT_VERSION,\n\t\td = win.document;\n\t// Detect all IE versions possible by feature detection\n\n\t// all versions:\t\t\t\t\t\t1.0, 2.0, 3.0, 4.0, 5.0, 5.2, 5.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\t// optimal version coverage:\t\t\t6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\t// versions accounted for:\t\t\t\t3-11\n\t// versions covered by feature testing: 3.0, 4.0, 5.0, 5.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\tif (can(d, 'pointerLockElement')) {\n\t\ttridentVersion = getVersion(uaVersion, 13, MAX_BROWSER_VER);\n\t} else if (has('Proxy', win)) {\n\t\ttridentVersion = getVersion(uaVersion, 12);\n\t} else if (has('MutationObserver', win)) { // IE 11+\n\t\ttridentVersion = getVersion(uaVersion, 11);\n\t} else if (has('atob', win)) { // IE 10+\n\t\ttridentVersion = getVersion(uaVersion, 10);\n\t} else if (has('addEventListener', win)) { // IE 9+\n\t\ttridentVersion = getVersion(uaVersion, 9);\n\t} else if (has('localStorage', win)) { // IE 8+\n\t\ttridentVersion = getVersion(uaVersion, 8);\n\t} else if (can(d, 'all') && has('XMLHttpRequest', win) && !has('XDomainRequest', win) && !has('opera', win)) { // IE 7\n\t\ttridentVersion = getVersion(uaVersion, 7);\n\t} else if (can(d, 'all') && !has('XMLHttpRequest', win)) { // IE 6\n\t\ttridentVersion = getVersion(uaVersion, 6);\n\t} else { // IE 3 - 5.5\n\t\ttridentVersion = DEFAULT_VERSION;\n\t}\n\n\treturn tridentVersion;\n};\n\n /**\n * See https://en.wikipedia.org/wiki/Trident_(layout_engine)\n * @private\n * @param {Number} ver\n * @returns {Number}\n */\nvar getTridentEngineVersion = function (ver) {\n\n\tvar engineVersion = DEFAULT_VERSION;\n\n\tif (ver >= 11) {\n\t\tengineVersion = 7;\n\t} else if (ver === 10) {\n\t\tengineVersion = 6;\n\t} else if (ver === 9) {\n\t\tengineVersion = 5;\n\t} else if (ver === 8) {\n\t\tengineVersion = 4;\n\t} else if (ver <= 7) {\n\t\tengineVersion = 3;\n\t}\n\n\treturn engineVersion;\n};\n\n/**\n * Returns the version of the Safari browser.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the version of Safari\n */\nvar getSafariVersion = function (win, uaVersion) {\n\n\tvar safariVersion = DEFAULT_VERSION,\n\t\td = win.document,\n\t\tnav = win.navigator;\n\n    if (has('WebAssembly', win)) {\n        safariVersion = getVersion(uaVersion, 11.0, Infinity);\n    } else if (has ('Intl', win)) {\n    \t// 10.10 chosen to account for any possible patch releases in the future\n        safariVersion = getVersion(uaVersion, 10.0, 10.10);\n    } else if (can(has('CSS', win), 'supports')) {\n\t\tsafariVersion = getVersion(uaVersion, 9.0, 9.3);\n\t} else if (has('indexedDB', win)) {\n\t\tsafariVersion = getVersion(uaVersion, 8.0, 8.4);\n\t} else if (has('execCommand', d)) {\n\t\tsafariVersion = getVersion(uaVersion, 7.0, 7.1);\n\t} else if (has('requestAnimationFrame', win)) {\n\t\tsafariVersion = getVersion(uaVersion, 6.0, 6.1);\n\t} else if (has('Uint32Array', win)) {\n\t\t// Safari 6533.18.5 - iOS 4.3.5\n\t\tsafariVersion = getVersion(uaVersion, 5.1);\n\t} else if (can(nav, 'geolocation')) {\n\t\tsafariVersion = getVersion(uaVersion, 5.0);\n\t} else if (can(nav, 'onLine')) {\n\t\tsafariVersion = getVersion(uaVersion, 4.2, 4.3);\n\t} else if (has('JSON', win)) {\n\t\t// Safari 6531.22.7 - iOS 4.0.2\n\t\tsafariVersion = getVersion(uaVersion, 4.0, 4.1);\n\t} else if (has('postMessage', win)) {\n\t\t// webkit 531.21.10 - iOS 3.2.2\n\t\t// webkit 528.16 - iOS 3.1.3\n\t\tsafariVersion = getVersion(uaVersion, 3.2);\n\t} else {\n\t\tsafariVersion = getVersion(uaVersion, 0, 3.1);\n\t}\n\n\treturn safariVersion;\n};\n\n/**\n * Creates a Browser instance with its attributed Kindle values.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number}\n */\nvar getKindleVersion = function (win, uaVersion) {\n\n\tvar kindleVersion = DEFAULT_VERSION,\n\t\td = win.document;\n\n\tif (can(d, 'pointerLockElement')) {\n\t\tkindleVersion = getVersion(uaVersion, 3.0, Infinity);\n\t} else if (has('PerformanceTiming', win)) {\n\t\tkindleVersion = getVersion(uaVersion, 2.0);\n\t} else {\n\t\tkindleVersion = getVersion(uaVersion, 1.0);\n\t}\n\n\treturn kindleVersion;\n};\n\n/**\n * Creates a Browser instance with its attributed OS and device type values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the browser instance\n */\nvar getOtherOS = function (win, ua) {\n\n\tvar otherBrowser = new Browser();\n\n\tif (has('wiiu', win)) {\n\t\totherBrowser.os.name = 'Wii';\n\t\totherBrowser.os.version = 'U';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/Wii/i, ua)) {\n\t\totherBrowser.os.name = 'Wii';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/PlayStation.4/i, ua)) {\n\t\totherBrowser.os.name = 'PlayStation';\n\t\totherBrowser.os.version = '4';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/PlayStation/i, ua)) {\n\t\totherBrowser.os.name = 'PlayStation';\n\t\totherBrowser.os.version = '3';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/NgetOtherOSokiaN/i, ua)) {\n\t\totherBrowser.os.name = 'Symbian';\n\t\totherBrowser.mobile = true;\n\t} else if (looksLike(/blackberry|RIM/i, ua)) {\n\t\totherBrowser.os.name = 'Blackberry';\n\t\totherBrowser.mobile = true;\n\t} else if (win.navigator && win.navigator.platform === 'X11' || looksLike(/Linux/i, ua)) {\n\t\totherBrowser.os.name = 'Linux';\n\t\totherBrowser.desktop = true;\n\t} else {\n\t\totherBrowser.os.name = 'Unknown';\n\t}\n\treturn otherBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Apple values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getAppleOS = function (win, ua) {\n\n\tvar mac = /Mac/i,\n\t\tiOS = /iPhone|iPad|iPod/i,\n\t\tappleBrowser = new Browser(),\n\t\tiOSVersion = DEFAULT_VERSION,\n\t\tmacVersion = DEFAULT_VERSION;\n\n\t// Mozilla/5.0 (iPhone; CPU iPhone OS 7_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D167 Safari/9537.53\n\t// webviews will not have Safari in their user-agent string\n\tif ((iOS.test(ua) || iOS.test(win.navigator.platform)) || !looksLike(/Safari|Firefox|Chrome/i, ua)) {\n\t\tif (!looksLike(/Version\\/\\d\\.\\d/i, ua)) {\n\t\t\tappleBrowser.ua.version = '2.0';\n\t\t} else {\n\t\t\tif (looksLike(/.OS.(\\d.\\d+)/i, ua)) {\n\t\t\t\tiOSVersion = (ua.match(/.OS.(\\d.\\d+)/i)[1].replace('_','.'));\n\t\t\t} else if (looksLike(/.Version\\/(\\d\\.\\d+)/i, ua)) {\n\t\t\t\tiOSVersion = (ua.match(/.Version\\/(\\d\\.\\d+)/i)[1]);\n\t\t\t}\n\t\t}\n\t\tappleBrowser.ua.version = appleBrowser.os.version = iOSVersion;\n\t\tappleBrowser.os.name = 'iOS';\n\t\tappleBrowser.tablet = /ipad/i.test(win.navigator.platform);\n\t\tappleBrowser.mobile = /iphone|ipod/i.test(win.navigator.platform);\n\t} else if (mac.test(ua) || mac.test(win.navigator.platform)) {\n\t\tmacVersion = parseIntIfMatch(ua, /Mac.OS.X.10.(\\d+)/i, 10); // this format was introduced at 3.0+\n\t\tif (macVersion > 0) {\n\t\t\tappleBrowser.os.name = 'Mac';\n\t\t\tappleBrowser.os.version = '10.' + macVersion;\n\t\t}\n\t\tappleBrowser.desktop = true;\n\t}\n\n\treturn appleBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Windows values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getMicrosoftOS = function (win, ua) {\n\n\tvar microsoftBrowser = new Browser();\n\n\tif (looksLike(/XBox One/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Xbox';\n\t\tmicrosoftBrowser.os.version = 'One';\n\t\tmicrosoftBrowser.name = 'Internet Explorer';\n\t\tmicrosoftBrowser.version = '10.0';\n\t\tmicrosoftBrowser.console = true;\n\t} else if (looksLike(/Xbox/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Xbox';\n\t\tmicrosoftBrowser.os.version = '360';\n\t\tmicrosoftBrowser.name = 'Internet Explorer';\n\t\tmicrosoftBrowser.version = '7.0';\n\t\tmicrosoftBrowser.console = true;\n\t} else {\n\t\tmicrosoftBrowser.os.name = 'Windows';\n\t\tif (looksLike(/IEMobile/i, ua)) {\n\t\t\tmicrosoftBrowser.mobile = true;\n\t\t\tmicrosoftBrowser.os.name = 'Windows Phone';\n\t\t\tif (looksLike(/Windows.Phone.(?:os)?\\s?(\\d\\d?\\.?\\d?\\d?)/i, ua)) {\n\t\t\t\tmicrosoftBrowser.os.version = ua.match(/Windows.Phone.(?:os)?\\s?(\\d\\d?\\.?\\d?\\d?)/i)[1];\n\t\t\t} else if (looksLike(/WP(\\d\\d?\\.?\\d?\\d?)/i, ua)) {\n\t\t\t\tmicrosoftBrowser.os.version = ua.match(/WP(\\d\\d?\\.?\\d?\\d?)/i)[1];\n\t\t\t}\n\t\t} else if (looksLike(/Windows.NT./i, ua)) {\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t\tvar pcVersion = parseFloatIfMatch(ua, /Windows.NT.(\\d\\d?\\.?\\d?\\d?)/i); // this format was introduced at 3.0+\n\t\t\t// List pulled from http://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n\t\t\tswitch (pcVersion) {\n\t\t\t\tcase 10:\n\t\t\t\t\tmicrosoftBrowser.os.version = '10.0';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.3:\n\t\t\t\t\tmicrosoftBrowser.os.version = '8.1';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.2:\n\t\t\t\t\tmicrosoftBrowser.os.version = '8';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.1:\n\t\t\t\t\tmicrosoftBrowser.os.version = '7';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'Vista';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.2:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2003';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.1:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'XP';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.01:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2000 SP1';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2000';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'NT';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tmicrosoftBrowser.os.version = DEFAULT_VERSION;\n\t\t\t}\n\t\t} else if (looksLike(/Windows.9(\\d)/i, ua)) {\n\t\t\tmicrosoftBrowser.os.version = '9x'; // 95, 98, or Me, which all must have a market share of nothingness by now so we dont care which it is\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t} else if (looksLike(/Windows.CE/i, ua)) {\n\t\t\tmicrosoftBrowser.os.version = 'CE'; // only matters that its mobile\n\t\t\tmicrosoftBrowser.mobile = true;\n\t\t} else {\n\t\t\tmicrosoftBrowser.os.version = DEFAULT_VERSION + '';\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t}\n\t}\n\t// special detection for MS Surfaces specifically\n\tif(looksLike(/Touch/i, ua) && !looksLike(/IEMobile/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Window RT';\n\t}\n\n\treturn microsoftBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Android values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getAndroidOS = function (win, ua) {\n\n\tvar androidBrowser = new Browser();\n\n\tandroidBrowser.ua.version = parseFloatIfMatch(ua, /Android\\s(\\d+\\.\\d+)/i);\n\tandroidBrowser.os.name = 'Android';\n\tandroidBrowser.mobile = true;\n\n\tif (looksLike(/Chrome/i, ua)) {\n\t\t// modern Android browsers use the chrome engine\n\t\tandroidBrowser.engine.name = 'chrome';\n\t\tandroidBrowser.engine.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10);\n\t} else if (looksLike(/AppleWebKit/i, ua)) {\n\t\t// old Android browsers uses webkit\n\t\tandroidBrowser.engine.name = 'webkit';\n\t\tandroidBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t} else {\n\t\tandroidBrowser.engine.name = 'unknown';\n\t}\n\t// for now, we use the same logic for Android's browser and os detection\n\tandroidBrowser.os.version = getAndroidVersion(win, androidBrowser.ua.version) + '';\n\n\treturn androidBrowser;\n};\n\n/**\n * Returns the Kindle's OS.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getKindleOS = function (win, ua) {\n\n\tvar kindleBrowser = new Browser();\n\n\tif (looksLike(/Silk/i, ua)) {\n\t\tkindleBrowser.engine.name = 'silk';\n\t\tkindleBrowser.engine.version = parseIntIfMatch(ua, /Silk\\/(\\d+)/i, 10);\n\t\t// set the detected version equal to silk by default\n\t\tkindleBrowser.ua.verison = kindleBrowser.engine.version;\n\t} else if (looksLike(/AppleWebKit/i, ua)) {\n\t\tkindleBrowser.engine.name = 'webkit';\n\t\tkindleBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t\t// if the kindle doesn't have silk in the userAgent, something is wonky\n\t\tkindleBrowser.ua.version = 1;\n\t}\n\n\tif (looksLike(/Version/i, ua)) {\n\t\t// some kindles have a Version property in their userAgent\n\t\tkindleBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d+\\.\\d+)/i);\n\t}\n\n\tkindleBrowser.version = getKindleVersion(win, kindleBrowser.ua.version);\n\tkindleBrowser.tablet = true;\n\n\treturn kindleBrowser;\n};\n\n/**\n * Reads the user agent string to determine OS.\n * @param {Window} win\n * @param  {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getOsFromUa = function (win, ua) {\n\n\tvar unknownOS = new Browser();\n\n\tif (looksLike(/Win|IEMobile/i, ua)) {\n\t\tunknownOS = getMicrosoftOS(win, ua);\n\t} else if (looksLike(/Mac|iPhone|iPad|iPod/i, ua)) {\n\t\tunknownOS = getAppleOS(win, ua);\n\t} else if (looksLike(/Android/i, ua)) {\n\t\tunknownOS = getAndroidOS(win, ua);\n\t} else if (looksLike(kindleBrowser, ua)) {\n\t\tunknownOS = getKindleOS(win, ua);\n\t} else {\n\t\tunknownOS = getOtherOS(win, ua);\n\t}\n\treturn unknownOS;\n};\n\n/**\n * Returns an object containing browser details (e.g. name, os, version, etc.).\n * @param {Window=} win\n * @param {String=} userAgent\n * @static\n * @returns {Browser} returns the Browser instance\n * @example\n * ```js\n * var os = browser.detect().os.name;\n *\n * console.log(os); // outputs OS name (e.g. Windows, Mac, Android, etc.)\n * ```\n */\nvar detect = function (win, userAgent) {\n\n\tvar detectedBrowser = new Browser(),\n\t\tbrowserType = '',\n\t\tw = win || window,\n\t\td = w.document,\n\t\tua = userAgent || w.navigator.userAgent,\n\t\tnav = w.navigator,\n\t\tstyle = w.document.documentElement.style;\n\n\t// reset the results array\n\tresults = [];\n\n\t// see if this is a mobile browser\n\tdetectedBrowser.mobile = isMobile(w);\n\n\t// run thru mobile detection first if applicable\n\tif (detectedBrowser.mobile) {\n\t\t// MS Surfaces pass the mobile test, so we account for them here\n\t\t// IE Mobile sometimes contain touch in the UA\n\t\tif (looksLike(/Win/i, ua) && looksLike(/Touch/i, ua) && !looksLike(/IEMobile/i, ua)) {\n\t\t\tbrowserType = TYPE.MICROSOFT;\n\t\t// Kindle feature support varies greatly, and they retain low market-share, so we trust the user agent for now\n\t\t} else if (looksLike(kindleBrowser, ua)) {\n\t\t\tbrowserType = TYPE.KINDLE;\n\t\t} else if (can(nav, 'permissions')) {\n\t\t\t// Chrome is the only mobile platform with permissions\n\t\t\tbrowserType = TYPE.CHROME_MOBILE;\n\t\t} else if (has('ondevicelight', w)) {\n\t\t\t// Only FF Mobile has the ambient light API\n\t\t\tbrowserType = TYPE.FIREFOX_MOBILE;\n\t\t} else if (has('setImmediate', w)) {\n\t\t\t// IE is the only mobile with setImmediate\n\t\t\tbrowserType = TYPE.MICROSOFT_MOBILE;\n\t\t} else if (!has('matchMedia', w)) {\n\t\t\t// only Opera Mini lacks matchMedia, thanks for making this easy Opera!\n\t\t\tbrowserType = TYPE.OPERA_MINI;\n\t\t} else if (has('speechSynthesis', w)) {\n\t\t\t// iOS began supporting internationalization api in iOS 10\n\t\t\t// iOS Safari has speech synth support that goes way back to older versions too\n\t\t\tbrowserType = TYPE.SAFARI_MOBILE;\n\t\t} else if (has('isFinite', w) || can(has('connection', nav), 'type')) {\n\t\t\t// Android is the only remaining one with isFinite\n\t\t\t// Very old Android supports nav.connection.type\n\t\t\tif (mathMLSupport(d)) {\n\t\t\t\t// Detect mathML to find webviews reporting themselves as Android\n\t\t\t\tbrowserType = TYPE.WEBVIEW;\n\t\t\t} else {\n\t\t\t\t// Android has never supported mathML as of 4.4.4\n\t\t\t\tbrowserType = TYPE.ANDROID;\n\t\t\t}\n\t\t} else if (!has('Intl', w)) {\n\t\t\t// blackBerry is the only one left without Internationalization\n\t\t\tbrowserType = TYPE.BLACKBERRY;\n\t\t} else if (has('webkitRequestFileSystem', w)) {\n\t\t\t// Opera is the only one remaining with a File System API\n\t\t\tbrowserType = TYPE.OPERA_ANDROID;\n\t\t} else {\n\t\t\tbrowserType = TYPE.UNKNOWN_MOBILE;\n\t\t}\n\t} else if (!has('EventSource', w) && can(nav, 'onLine')) {\n\t\tbrowserType = TYPE.MICROSOFT;\n\t} else if (has('InstallTrigger', w)) {\n\t\tbrowserType = TYPE.FIREFOX;\n\t} else if (has('chrome', w) && !has('opera', w) && !looksLike(/\\sOPR\\/\\d+/i, ua)) {\n\t\tbrowserType = TYPE.CHROME;\n\t} else if (has('opera', w) || looksLike(/\\sOPR\\/\\d+/i, ua)) {\n\t\tbrowserType = TYPE.OPERA;\n\t} else if (!has('webkitRequestFileSystem', w)) {\n\t\tbrowserType = TYPE.SAFARI;\n\t} else {\n\t\tbrowserType = TYPE.UNKNOWN;\n\t}\n\n\t// now that we know the environment, we run feature detection specific to it\n\tif (browserType === TYPE.MICROSOFT) {\n\n\t\tdetectedBrowser = getMicrosoftOS(w, ua);\n\t\tdetectedBrowser.engine.name = 'trident';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Edge\\/(\\d+)/i, 10);\n\n\t\tif (detectedBrowser.ua.version === DEFAULT_VERSION) {\n\t\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /MSIE\\/(\\d+)/i, 10);\n\t\t}\n\n\t\tdetectedBrowser.version = getTridentVersion(w, detectedBrowser.ua.version);\n\t\tdetectedBrowser.engine.version = getTridentEngineVersion(detectedBrowser.version);\n\n\t\tif (detectedBrowser.version >= 12) {\n\t\t\tdetectedBrowser.name = 'Edge';\n\t\t} else {\n\t\t\tdetectedBrowser.name = 'Internet Explorer';\n\t\t}\n\n\t\tif (detectedBrowser.name === 'Edge' && !looksLike(/Edge/i, ua)) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t} else if (detectedBrowser.name === 'Internet Explorer' && (!looksLike(/MSIE/i, ua) && !looksLike(/Trident/i, ua))) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t}\n\n\t} else if (browserType === TYPE.FIREFOX) {\n\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Firefox';\n\t\tdetectedBrowser.engine.name = 'gecko';\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /rv:(\\d+)/i, 10);\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Firefox\\/(\\d+)/i, 10);\n\t\tdetectedBrowser.version = getGeckoVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Firefox/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.CHROME) {\n\t\t// Detect all chrome versions possible by feature detection\n\n\t\t// all versions:\t\t\t\t\t\t1-38\n\t\t// optimal version coverage:\t\t\t21, 35, 36, 37, 38\n\t\t// versions accounted for:\t\t\t\t4-38\n\t\t// versions covered by feature testing: 4-13, 15, 20-27, 30, 32-34\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.engine.name = has('CSS', w) ? 'blink' : 'webkit'; // should be all of version 27+ on blink\n\t\t// chrome uses a standard ua format and can always supported indexOf\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10);\n\t\tdetectedBrowser.ua.version = detectedBrowser.engine.version;\n\t\tdetectedBrowser.version = getChromiumVersion(w, detectedBrowser.ua.version);\n\n\t\tdetectedBrowser.name = 'Chrome';\n\n\t\tif (!looksLike(/Chrome/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.OPERA) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\n\t\tif (looksLike(/Presto\\/(\\d+\\.\\d+)/i, ua)) {\n\t\t\tdetectedBrowser.engine.version = parseFloatIfMatch(ua, /Presto\\/(\\d+\\.\\d+)/i);\n\t\t} else if (looksLike(/AppleWebKit\\/(\\d+)/i, ua)) {\n\t\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t\t}\n\n\t\tif (looksLike(/Nintendo/i, ua)) {\n\t\t\tdetectedBrowser.engine.name = 'presto';\n\t\t\tdetectedBrowser.version = '9.0';\n\t\t\tdetectedBrowser.console = true;\n\t\t} else {\n\t\t\tif (can(has('opera', w), 'version')) {\n\t\t\t\tdetectedBrowser.feature.version = parseFloat(w.opera.version()); // presto reveals its version via api\n\t\t\t\tdetectedBrowser.version = detectedBrowser.feature.version;\n\t\t\t\tdetectedBrowser.engine.name = 'presto'; // should be all of version 27+ on blink\n\t\t\t} else {\n\t\t\t\tdetectedBrowser.version = getChromiumVersion(w, detectedBrowser.ua.version);\n\t\t\t\tdetectedBrowser.engine.name = 'blink'; // chrome's blink engine would be the version of the engine here\n\t\t\t\tdetectedBrowser.engine.version = detectedBrowser.version; // chrome's blink engine would be the version of the engine here\n\n\t\t\t\tif (looksLike(/OPR\\/\\d+.\\d+/i, ua)) {\n\t\t\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /OPR\\/\\d+.\\d+/i);\n\t\t\t\t}\n\n\t\t\t\tif (detectedBrowser.version >= 28) { // chrome version is 28+ then it's on chrome's release cycle.\n\t\t\t\t\tdetectedBrowser.version = getVersion(detectedBrowser.ua.version, detectedBrowser.version - 13, MAX_BROWSER_VER); // Guess the version based on chrome's version.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdetectedBrowser.name = 'Opera';\n\n\t\tif (!looksLike(/Opera/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.SAFARI) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/, 10);\n\t\t// all versions:\t\t\t\t\t\t0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 2.0, 3.0, 3.1, 3.2, 4.0, 4.1, 5.0, 5.1, 6.0, 6.1, 7.0, 8.0\n\t\t// optimal version coverage:\t\t\t6.1, 7.0, 8.0\n\t\t// versions accounted for:\t\t\t\t*\n\t\t// versions covered by feature testing: 3.2, 4.0, 4.2, 5.0, 6.0, 7.0\n\t\tdetectedBrowser.desktop = true;\n\n\t\tif (looksLike(/Version\\/(\\d\\.\\d)/i, ua)) {\n\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d\\.\\d)/i); // this format was introduced at 3.0+browser.ua.version = parseFloat(ua.match()[1]);\n\t\t}\n\n\t\tif (looksLike(/Mac.OS.X.10.(\\d+)/i, ua)) {\n\t\t\tvar macVersion = parseIntIfMatch(ua, /Mac.OS.X.10.(\\d+)/i, 10); // this format was introduced at 3.0+\n\t\t\tif (macVersion > 0) {\n\t\t\t\tdetectedBrowser.os.name = 'Mac';\n\t\t\t\tdetectedBrowser.os.version = '10.' + macVersion;\n\t\t\t} else {\n\t\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t}\n\n\t\tdetectedBrowser.name = 'Safari';\n\t\tdetectedBrowser.engine.name = 'webkit';\n\t\tdetectedBrowser.version = getSafariVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Safari/i, ua)) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t}\n\n\t} else if (browserType === TYPE.ANDROID) {\n\n\t\tdetectedBrowser = getAndroidOS(w, ua);\n\t\tdetectedBrowser.name = 'Android';\n\t\tdetectedBrowser.version = getAndroidVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Android/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.SAFARI_MOBILE) {\n\n\t\tdetectedBrowser = getAppleOS(w, ua);\n\t\t// Feature detect Mobile Safari so we can tell if it's the real deal or an imposter\n\t\tdetectedBrowser.name = 'Mobile Safari';\n\t\tdetectedBrowser.engine.name  = 'webkit';\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/, 10);\n\t\tif (looksLike(/Version\\/(\\d\\.\\d)/i, ua)) {\n\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d\\.\\d)/i); // this format was introduced at 3.0+browser.ua.version = parseFloat(ua.match()[1]);\n\t\t}\n\t\t// all versions:\t\t\t\t\t\t1.0, 1.1, 2.0, 2.1, 2.2, 3.0, 3.1, 3.2, 4.0, 4.1, 4.2, 4.3, 5.0, 5.1, 6.0, 6.1, 7.0, 7.1, 8.0\n\t\t// optimal version coverage:\t\t\t6.x, 7.x, 8.x\n\t\t// versions accounted for:\t\t\t\t*\n\t\t// versions covered by feature testing:\t3.2, 4.0, 4.2, 5.0, 6.0, 7.0, 8.0\n\t\tdetectedBrowser.version = getSafariVersion(w, detectedBrowser.ua.version);\n\t\tdetectedBrowser.os.version = detectedBrowser.version;\n\n\t\tif (!looksLike(/Safari/i, ua) || !looksLike(/iPhone|iPad/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.CHROME_MOBILE) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Chrome Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Chrome/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.FIREFOX_MOBILE) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Firefox Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Firefox\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Firefox/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.MICROSOFT_MOBILE) {\n\t\tdetectedBrowser = getMicrosoftOS(w, ua);\n\t\tdetectedBrowser.name = 'Mobile IE';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /IEMobile\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/MSIE/i, ua) || !looksLike(/IEMobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.WEBVIEW) {\n\t\tdetectedBrowser = getAppleOS(w, ua);\n\t\tdetectedBrowser.name = 'iOS Webview';\n\t\tif (!looksLike(/iPhone|iPad|iPod/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\t} else if (browserType === TYPE.OPERA_MINI) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Opera Mini';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Opera Mini\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Opera/i, ua) || !looksLike(/Mini/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.OPERA_ANDROID) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Opera Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Opera\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Opera/i, ua) || !looksLike(/Android/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.KINDLE) {\n\t\tdetectedBrowser = getKindleOS(w, ua);\n\t\tdetectedBrowser.name = 'Kindle';\n\t\t// we rely on the user agent for all kindle detection, so we can't detect untrustworthiness\n\t} else if (browserType === TYPE.UNKNOWN || browserType === TYPE.UNKNOWN_MOBILE) {\n\t\tif (can(style, 'KhtmlUserInput')) {\n\t\t\tdetectedBrowser.name = 'Linux Browser';\n\t\t\tdetectedBrowser.engine.name = 'khtml';\n\t\t\tdetectedBrowser.os.name = 'Linux';\n\t\t\tdetectedBrowser.desktop = true;\n\t\t} else {\n\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t\tdetectedBrowser.name = 'Unknown';\n\t\t\tdetectedBrowser.engine.name = 'Unknown';\n\t\t\tdetectedBrowser.os.name = 'Unknown';\n\t\t}\n\t}\n\n\t// if the user agent version is beyond \n\tif (detectedBrowser.ua.version > detectedBrowser.version) {\n\t\tdetectedBrowser.max = MAX.EXCEED;\n\t}\n\n\tmap.TRUSTWORTHY = save(detectedBrowser.trustworthy);\n\tmap.BROWSER_NAME = save(detectedBrowser.name);\n\tmap.BROWSER_VERSION = save(detectedBrowser.version);\n\tmap.ENGINE_NAME = save(detectedBrowser.engine.name);\n\tmap.ENGINE_VERSION = save(detectedBrowser.engine.version);\n\tmap.OS_NAME = save(detectedBrowser.os.name);\n\tmap.OS_VERSION = save(detectedBrowser.os.version);\n\tmap.DESKTOP = save(detectedBrowser.desktop);\n\tmap.MOBILE = save(detectedBrowser.mobile);\n\tmap.TABLET = save(detectedBrowser.tablet);\n\tmap.CONSOLE = save(detectedBrowser.console);\n\tmap.MAX = save(detectedBrowser.max);\n\n\tdetectedBrowser.isIE = (detectedBrowser.name === 'Internet Explorer');\n\tdetectedBrowser.isFF = (detectedBrowser.name === 'Firefox');\n\tdetectedBrowser.isOpera = (detectedBrowser.name === 'Opera');\n\tdetectedBrowser.isChrome = (detectedBrowser.name === 'Chrome');\n\tdetectedBrowser.isSafari = (detectedBrowser.name === 'Safari');\n\n\t/**\n\t * Retrieve any results in the map by name because they're returned in an array without names.\n\t * @param {String} key\n\t * @returns {*}\n\t */\n\tmodule.exports.read = function (key) {\n\t\treturn results[key];\n\t};\n\n\tmodule.exports.map = map;\n\tmodule.exports.results = results;\n\tmodule.exports.details = detectedBrowser;\n\n\treturn detectedBrowser;\n};\n\nexports.detect = detect;\nexports.isMobile = isMobile;\nexports.mathMLSupports = mathMLSupport;\nexports.getVersion = getVersion;\nexports.looksLike = looksLike;\nexports.parseIntIfMatch = parseIntIfMatch;\nexports.parseFloatIfMatch = parseFloatIfMatch;\nexports.getAndroidVersion = getAndroidVersion;\nexports.getChromiumVersion = getChromiumVersion;\nexports.getSafariVersion = getSafariVersion;\nexports.getKindleVersion = getKindleVersion;\nexports.getOtherOS = getOtherOS;\nexports.getAppleOS = getAppleOS;\nexports.getMicrosoftOS = getMicrosoftOS;\nexports.getAndroidOS = getAndroidOS;\nexports.getKindleOS = getKindleOS;\nexports.getOsFromUa = getOsFromUa;\n\n\n/***/ }),\n\n/***/ 275:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @desc Environment Detection - Gets Data Pertaining to User's Environment\n * @module Environment\n * @typicalname environment\n * @example\n * ```\n * var environment = require(\"adlibs/lib/detect/environment\");\n * ```\n */\n\n/* jshint strict: false, nonstandard: true, browser: true, moz: true, esnext: true, es5: true */\n\n// ****** BEGIN DETECT ENVIRONMENT CODE ******* //\n\n\n\nvar win = window,\n\tdoc = win.document,\n\tnav = win.navigator,\n\tcan = __webpack_require__(71).can,\n\thas = __webpack_require__(71).has;\n\n/**\n * Return this ad's position within the parent, in the order of the frames around us.\n * @param pos\n * @private\n * @returns {String}\n */\nvar getFramePosition = function (pos) {\n\tif (win.parent.frames[pos] || pos > 100) {\n\t\tif (win.parent.frames[pos] === window) {\n\t\t\treturn '' + pos;\n\t\t} else {\n\t\t\treturn getFramePosition(pos + 1);\n\t\t}\n\t} else {\n\t\treturn '-1';\n\t}\n};\n\n/**\n * Return the ad's depth in iframes.\n * @param myWin {Object} window object\n * @param depth {Number} nest level\n * @private\n * @returns {Number}\n */\nvar getFrameDepth = function (myWin, depth) {\n\tdepth = depth || 0;\n\tmyWin = myWin || window;\n\n\tif (myWin === top || depth > 100) {\n\t\treturn depth;\n\t} else {\n\t\treturn getFrameDepth(myWin.parent, depth + 1);\n\t}\n};\n\nvar versionMatch = /(\\d+.\\d+)/i;\n\n/**\n * Check the web standards compliant plugin interface for plugins by name.\n * @param name\n * @private\n * @returns {String}\n */\nvar checkPlugin = function (name) {\n\t/**\n\t * @type plugin\n\t * @property description\n\t * @property version\n\t * @property name\n\t */\n\tvar plugin = has(name, has('plugins', nav));\n\tvar\tversion;\n\n\tif (typeof plugin === 'object') {\n\t\tif (versionMatch.test(has('version', plugin).toString())) {\n\t\t\tversion = plugin.version;\n\t\t} else if (versionMatch.test(has('description', plugin).toString())) {\n\t\t\tversion = plugin.description;\n\t\t} else if (versionMatch.test(has('name', plugin).toString())) {\n\t\t\tversion = plugin.name;\n\t\t} else {\n\t\t\tversion = '1.0'; // @todo come up with something a little more scientific\n\t\t}\n\n\t\t// This has to come back with an array because it matched the test above in all cases.\n\t\treturn '' + parseFloat(version.match(versionMatch)[1].replace('_', '.'));\n\t}\n\treturn '-1';\n};\n\n/**\n * Check standards compliant and active x interfaces for the flash plugin version.\n * @private\n * @returns {String}\n */\nvar getFlashVersion = function () {\n\tif (can(nav, 'plugins') && !has('ActiveXObject')) { // standards compliant browsers\n\n\t\treturn checkPlugin('Shockwave Flash'); //Flash version\n\n\t} else if (has('ActiveXObject')) { // must be ie, but not the newest ie 11+ releases\n\n\t\treturn (function () {\n\t\t\t\tvar plugin,\n\t\t\t\t\tpluginVersion;\n\n\t\t\t\ttry {\n\t\t\t\t\tplugin = (new has('ActiveXObject'))('ShockwaveFlash.ShockwaveFlash'); // jshint ignore:line\n\t\t\t\t\tpluginVersion = has('GetVariable', plugin)('$version');\n\t\t\t\t\tif (typeof pluginVersion === 'string') {\n\t\t\t\t\t\tpluginVersion.split(' ')[1].split(',');\n\t\t\t\t\t}\n\t\t\t\t\treturn pluginVersion[0] + '.' + pluginVersion[1];\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//Flash Not Installed\n\t\t\t\t\treturn '-1';\n\t\t\t\t}\n\t\t\t}()) || '-1';\n\t}\n\n\treturn '-1';\n};\n\n/**\n * Detect environmental variables and return them wrapped within an object.\n * @returns {Object} returns the environment object\n * @static\n * @example\n * ```js\n * var flash = environment.detect().flash;\n *\n * console.log(flash) // outputs the version of Flash\n * ```\n *\n */\nvar detect = function () {\n\n\tvar environment = {},\n\t\tzoomRatio = 1,\n\t\tdeviceWidth,\n\t\tpixelDensity,\n\t\tresults = [],\n\t\tmap = {};\n\n\tvar save = function (result) {\n\t\tresults.push(result);\n\t\treturn results.length - 1;\n\t};\n\n\tenvironment.parent_ads = has('length', has('frames', win.parent)) || '-1';\n\tmap.PARENT_ADS = save(environment.parent_ads);\n\n\ttry {\n\t\tenvironment.ad_order = getFramePosition(0);\n\t} catch (ex) {\n\t\tenvironment.ad_order = '-1';\n\t}\n\n\ttry {\n\t\tenvironment.ad_depth = getFrameDepth() + '';\n\t} catch (ex) {\n\t\tenvironment.ad_depth = '-1';\n\t}\n\n\tmap.AD_ORDER = save(environment.ad_order);\n\tmap.AD_DEPTH = save(environment.ad_depth);\n\n\tif (can(screen,'deviceXDPI') && can(screen,'logicalXDPI')) { // old ie, so this must go before the IE check\n\t\tzoomRatio = (screen.deviceXDPI / screen.logicalXDPI).toFixed(3);\n\t} else if (has('all')) { // new ie\n\t\tzoomRatio = (doc.documentElement.offsetHeight / win.innerHeight).toFixed(3);\n\t} else if (has('orientation')) { // mobile webkit\n\t\tdeviceWidth = (Math.abs(win.orientation) === 90) ? screen.height : screen.width;\n\t\tzoomRatio = (deviceWidth / win.innerWidth).toFixed(3);\n\t} else if (has('opera')) {\n\t\tzoomRatio = (top.outerWidth / top.innerWidth).toFixed(3);\n\t} // anything else is obnoxiously complex\n\n\tif (!isFinite(zoomRatio)) {\n\t\tzoomRatio = '-1';\n\t} else if (+zoomRatio !== 1) {\n\t\tzoomRatio = (+zoomRatio).toFixed(3);\n\t}\n\n\tpixelDensity = has('devicePixelRatio') || 1;\n\n\tenvironment.zoom_ratio = zoomRatio;\n\tenvironment.pixel_density = pixelDensity.toFixed(3);\n\tmap.ZOOM_RATIO = save(zoomRatio);\n\tmap.PIXEL_DENSITY = save(pixelDensity.toFixed(3));\n\n\t//d.documentElement.clientWidth; // ad width\n\t//d.documentElement.offsetWidth; // ??\n\t//d.documentElement.scrollWidth; // ??\n\t//\n\t//screen.availHeight; // total screen size available to the browser minus the os ui\n\t//screen.height; // total screen size\n\t//\n\t//w.outerWidth; // potentially as close as we can get on safari and chrome to the window width\n\t//w.innerWidth; // ad width including a check for scrollbars\n\t//\n\t//if (d.documentElement.clientWidth === w.innerWidth) { } // there are no horizontal scroll bars in the ad\n\t//if (d.documentElement.clientHeight === w.innerHeight) { } // there are no horizontal scroll bars in the ad\n\t//\n\t//if (isMobile) {\n\t//\tif (screen.width === screen.availWidth) { console.log(''); } // maximized width\n\t//\telse if (screen.width === screen.availHeight) { console.log(''); } // maximized width\n\t//}\n\t//\n\t//if (screen.height === screen.availHeight) { } // maximized width\n\n\t// Estimated screen size given the current screen, which is the only one we can measure\n\n\tenvironment.screen_w = ((has('width', screen) || '0') * pixelDensity).toFixed(0);\n\tenvironment.screen_h = ((has('height', screen) || '0') * pixelDensity).toFixed(0);\n\n\t// Estimated viewport size, but not really that accurate for IE without getting an event from IE 9-10 per the geometry strat\n\t// @todo fix this because it is definitely not correct the way it's implemented\n\tenvironment.avail_w = ((has('availWidth', screen) || '0') * pixelDensity).toFixed(0);\n\tenvironment.avail_h = Math.max((can(doc, 'documentElement') && has('clientWidth', doc.documentElement)) || 0, has('outerWidth') || 0).toFixed(0);\n\n\t//\n\tenvironment.ad_w = Math.max((can(doc, 'documentElement') && has('clientWidth', doc.documentElement)) || 0, has('innerWidth') || 0).toFixed(0);\n\tenvironment.ad_h = Math.max((can(doc, 'documentElement') && has('clientHeight', doc.documentElement)) || 0, has('innerHeight') || 0).toFixed(0);\n\n\tenvironment.flash = getFlashVersion();\n\n\t// Do not track info from the browser. The Mozilla implementation and Microsoft implements vary quite a bit.\n\tif (can(nav, 'doNotTrack')) {\n\t\tenvironment.dnt = (nav.doNotTrack === 'yes' || parseInt(nav.doNotTrack, 10) === 1) ? '1' : '0';\n\t} else if (can(nav, 'msDoNotTrack')) {\n\t\tenvironment.dnt = (nav.msDoNotTrack === 'yes' || parseInt(nav.msDoNotTrack, 10) === 1) ? '1' : '0';\n\t} else {\n\t\tenvironment.dnt = '-1';\n\t}\n\n\t// Rendering mode the browser is using. This represents a chance to check for quirks mode's target IE version\n\tenvironment.doc_mode = has('documentMode', doc) || '0';\n\n\tmap.SCREEN_W = save(environment.screen_w);\n\tmap.SCREEN_H = save(environment.screen_h);\n\tmap.AVAIL_W = save(environment.avail_w);\n\tmap.AVAIL_H = save(environment.avail_h);\n\tmap.AD_W = save(environment.ad_w);\n\tmap.AD_H = save(environment.ad_h);\n\tmap.FLASH = save(environment.flash);\n\tmap.DNT = save(environment.dnt);\n\tmap.DOC_MODE = save(environment.doc_mode);\n\n\t/**\n\t *\n\t * @returns {Number}\n\t */\n\tmodule.exports.getFlashVersion = function () {\n\t\treturn parseFloat(environment.flash); //Flash Version\n\t};\n\n\t/**\n\t *\n\t * @returns {String}\n\t */\n\tmodule.exports.getFrameDepth = function () {\n\t\treturn environment.ad_depth;\n\t};\n\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getAvailableScreenSize = function () {\n\t\treturn {\n\t\t\theight: environment.avail_h,\n\t\t\twidth: environment.avail_w\n\t\t};\n\t};\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getScreenSize = function () {\n\t\treturn {\n\t\t\theight: environment.screen_h,\n\t\t\twidth: environment.screen_w\n\t\t};\n\t};\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getAdDocSize = function () {\n\t\treturn {\n\t\t\theight: environment.ad_h,\n\t\t\twidth: environment.ad_w\n\t\t};\n\t};\n\n\tmodule.exports.details = environment;\n\tmodule.exports.map = map;\n\tmodule.exports.results = results;\n\n\treturn environment;\n};\n\nmodule.exports.detect = detect;\n\n// ****** BEGIN DETECT ENVIRONMENT CODE ******* //\n\n\n/***/ }),\n\n/***/ 71:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @module canHas\n */\n\n\n\n/**\n * @desc Can this object use this property?\n * @static\n * @param obj\n * @param propertyName\n * @returns {Boolean}\n * @example\n * ```js\n * var can = require('adlibs/lib/canHas').can;\n * ```\n */\nvar can = function (obj, propertyName) {\n\treturn typeof obj[propertyName] !== 'undefined';\n};\n\n/**\n * @desc Does this window have this object in it?\n * @static\n * @param globalObjectName\n * @param [scope] Alternatively, you can call \"run\" with a more sane method signature.\n * @returns {*}\n * @example\n * ```js\n * var has = require('adlibs/lib/canHas').has;\n * ```\n */\nvar has = function (globalObjectName, scope) {\n\tscope = scope || window;\n\treturn can(scope, globalObjectName) ? scope[globalObjectName] : false;\n};\n\n/**\n * @desc Check to see if this object owns the method as opposed to just inheriting it from another object.\n * @static\n * @param obj\n * @param propertyName\n * @returns {Boolean}\n */\nvar own = function (obj, propertyName) {\n\treturn obj.hasOwnProperty(propertyName);\n};\n\n/**\n * @desc Return a runnable method by default.\n * @static\n * @param obj - Scope to use, or method to run when not providing a method as the second param.\n * @param [methodName] The method to check for.\n * @returns {Function}\n */\nvar run = function (obj, methodName) {\n\tvar defaultRunnable = function () { return false;},\n\t\trunnable = methodName ? obj[methodName] : window[obj];\n\n\treturn typeof runnable === 'function' ? runnable : defaultRunnable;\n};\n\n/**\n * @desc For each in, shorthanded because manually writing hasOwnProperty each and every time is not a good use of time.\n * @static\n * @param obj\n * @param callback\n */\nvar forIn = function (obj, callback) {\n\tvar property;\n\tfor (property in obj) {\n\t\tif (obj.hasOwnProperty(property)) {\n\t\t\tif (callback(property, obj[property]) === false) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * @desc A substitute for Object.keys for when browsers don't attempt to convert non-objects to arrays\n * @static\n * @param obj\n * @returns {*}\n */\nvar keys = function (obj){\n\tif (obj) {\n\t\tswitch (typeof obj){\n\t\t\tcase 'object':\n\t\t\t\treturn Object.keys(obj);\n\t\t\tcase 'string':\n\t\t\t\treturn obj.split('');\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t} else {\n\t\tthrow new TypeError('Cannot convert null or undefined to object');\n\t}\n\n};\n\nmodule.exports = {\n\tcan: can,\n\thas: has,\n\trun: run,\n\town: own,\n\tforIn: forIn,\n\tkeys: keys\n};\n\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// tmm.025364ba39c9c9981e57.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 273);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 084d8f075e533e1190ce","(function () {\n  var browser = require('adlibs/lib/detect/browser').detect();\n  const environment = require('adlibs/lib/detect/environment').detect()\n  function init(tmmId, w, h) {\n    const uid = guid()\n    wrap(uid)\n    genifr(uid, tmmId, w, h)\n  }\n  function guid() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4()\n  }\n  function wrap(uid) {\n    document.write('<div id=\"' + uid + '\"></div>')\n  }\n  function genifr(uid, tmmId, w, h) {\n    let ifr = document.createElement('iframe')\n    ifr.width = w\n    ifr.height = h\n    ifr.scrolling = 'no'\n    ifr.frameBorder = 0\n    ifr.marginHeight = 0\n    ifr.marginWidth = 0\n    const wrapper = document.getElementById(uid)\n    wrapper.appendChild(ifr)\n    const os = browser.os\n    let browserType = 0\n    if (browser.tablet) {\n      browserType = 3\n    } else if (browser.mobile) {\n      browserType = 2\n    } else if (browser.desktop) {\n      browserType = 1\n    } else if (browser.console) {\n      browserType = 4\n    }\n    const link = 'https://adx.tokenmama.io/c?a=' + encodeURIComponent(tmmId) + \n      '&url=' + encodeURIComponent(window.location) +\n      '&referrer=' + encodeURIComponent(document.referrer) + \n      '&sw=' + environment.screen_h + \n      '&sh=' + environment.screen_w + \n      '&adw=' + environment.ad_w + \n      '&adh=' + environment.ad_h + \n      '&os_name=' + os.name + \n      '&os_ver=' + os.version +\n      '&bw_name=' + browser.name +\n      '&bw_ver=' + browser.version +\n      '&bw_type=' + browserType;\n    const htm = '<body><style>*{margin:0;padding:0}.imp{width:1px;height:1px;display:absolute;top:-1px;;left:-1px;}.img{width:100%;height:100%}.logo{position:absolute;bottom:0;right:-4px;z-index:10000;}a img{width:20px;height16px;}a:hover.logo{right:0}</style><a href=\"https://adx.tokenmama.io\" target=\"_blank\" class=\"logo\"><img src=\"https://tmm-adx.tianxi100.com/img/logo/ad.png?v=20180428\"></a><script src=\"https://tmm-adx.tianxi100.com/js/tmm-c.js\" type=\"text/javascript\"></script><script src=\"' + link + '\" type=\"text/javascript\"></script></body>';\n    const ifrdom = ifr.contentWindow.document;\n    ifrdom.open();\n    ifrdom.write(htm);\n    ifrdom.close();\n  }\n  document.ready = init(window.tmm_id, window.tmm_width, window.tmm_height);\n})(window)\n\n\n// WEBPACK FOOTER //\n// ./src/tmm.js","/**\n * @module Browser\n * @desc Browser Detection - Gets Data Pertaining to User's Browser and OS\n * @typicalname browser\n * @example\n * ```\n * var browser = require(\"adlibs/lib/detect/browser\")\n * ```\n */\n\n/**\n * @type Image\n * @property {String} srcset\n */\n\n/**\n * @type performance\n * @property {Object} timing\n * @property {Function} mark\n * @ignore\n */\n\n/**\n * @type document\n * @property {Number} uniqueID\n * @property {String} hidden\n * @property {Object} all\n * @property {String} documentMode\n * @property {String} visibilityState\n * @property {Document} documentElement\n * @property {Function} webkitRequestFullscreen\n * @ignore\n */\n\n/**\n * @type navigator\n * @property {String} platform\n * @property {Object} mozGetUserMedia\n * @property {Boolean} standalone\n * @property {Object} geolocation\n * @property {Object} mozBattery\n * @property {Object} webkitGetUserMedia\n * @property {String} userAgent\n * @property {Function} vibrate\n * @ignore\n */\n\n/**\n * @type browser\n * @property {String} name\n * @property {Boolean} trustworthy\n * @property {Boolean} desktop\n * @property {Boolean} mobile\n * @property {Boolean} tablet\n * @property {Boolean} console\n * @property {String} version\n * @property {UA} ua\n * @property {Feature} feature\n * @property {Engine} engine\n * @property {OS} os\n * @property {Function} setVersionAgainstUaVersion\n */\n\n/**\n * @type ua\n * @property {String} version\n */\n\n/**\n * @type feature\n * @property {String} version\n */\n\n/**\n * @type engine\n * @property {String} name\n * @property {String} version\n */\n\n/**\n * @type os\n * @property {String} name\n * @property {String} version\n */\n\n/**\n * @type style\n * @property {Object} KhtmlUserInput\n * @ignore\n */\n\n/**\n * @type URL\n * @property {Function} createObjectURL\n * @ignore\n */\n\n/**\n * @type history\n * @property {Object} replaceState\n * @ignore\n */\n\n/* This is a separator to keep the JSDOC from going insane */\n\nvar can = require('../canHas').can,\n\thas = require('../canHas').has,\n\tkindleBrowser = /Kindle|Silk|KFTT|KFOT|KFJWA|KFJWI|KFSOWI|KFTHWA|KFTHWI|KFAPWA|KFAPWI/i,\n\tresults = [],\n\tmap = {},\n\tDEFAULT_VERSION = -1,\n\tMAX = {\n\t\tEXCEED: 'ex',\n\t\tOK: 'ok'\n\t},\n\tMAX_BROWSER_VER = 1000,\n\tTYPE = {\n\t\tMICROSOFT: 1,\n\t\tFIREFOX: 2,\n\t\tCHROME: 3,\n\t\tOPERA: 4,\n\t\tSAFARI: 5,\n\t\tANDROID: 6,\n\t\tSAFARI_MOBILE: 7,\n\t\tOPERA_MINI: 8,\n\t\tOPERA_ANDROID: 9,\n\t\tCHROME_MOBILE: 10,\n\t\tMICROSOFT_MOBILE: 11,\n\t\tFIREFOX_MOBILE: 12,\n\t\tBLACKBERRY: 13,\n\t\tKINDLE: 14,\n\t\tWEBVIEW: 15,\n\t\tUNKNOWN: 16,\n\t\tUNKNOWN_MOBILE: 17\n\t};\n\n/**\n * @private\n * @returns {UA}\n * @constructor\n */\nvar Ua = function () {\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {Feature}\n * @constructor\n */\nvar Feature = function () {\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {Engine}\n * @constructor\n */\nvar Engine = function () {\n\tthis.name = '';\n\tthis.version = DEFAULT_VERSION;\n};\n\n/**\n * @private\n * @returns {OS}\n * @constructor\n */\nvar Os = function () {\n\tthis.name = '';\n\tthis.version = DEFAULT_VERSION + '';\n};\n\n/**\n * @private\n * @returns {Browser} Returns the Browser instance\n * @constructor\n */\nvar Browser = function () {\n\tvar self = this; // here for minification purposes\n\tself.name = ''; // verified name\n\tself.trustworthy = true; // does the ua jive with the feature detection\n\tself.desktop = false; // is this a desktop browser\n\tself.mobile = false; // is this a mobile phone browser\n\tself.tablet = false; // is this a mobile tablet browser\n\tself.console = false; // is this a video game or other console browser\n\tself.max = MAX.OK; // by default the ua version matches what is available\n\tself.version = DEFAULT_VERSION; // full version\n\tself.ua = new Ua();\n\tself.feature = new Feature();\n\tself.engine = new Engine();\n\tself.os = new Os();\n};\n\n/**\n * Check for MathML support in browsers to help detect certain browser version numbers where this is the only difference.\n * @param {Document} d\n * @static\n * @returns {Boolean} returns true if browser has mathml support\n */\nvar mathMLSupport = function (d) {\n\n\t'use strict';\n\n\tvar hasMathML = false;\n\n\tif (d.createElementNS) {\n\t\tvar NAMESPACE = 'http://www.w3.org/1998/Math/MathML',\n\t\t\tdiv = d.createElement('div'),\n\t\t\tmfrac;\n\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.top = div.style.left = 0;\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.width = div.style.height = 'auto';\n\t\tdiv.style.fontFamily = 'serif';\n\t\tdiv.style.lineheight = 'normal';\n\n\t\tmfrac = div.appendChild(d.createElementNS(NAMESPACE,'math'))\n\t\t\t.appendChild(d.createElementNS(NAMESPACE,'mfrac'));\n\n\t\tmfrac.appendChild(d.createElementNS(NAMESPACE,'mi'))\n\t\t\t.appendChild(d.createTextNode('xx'));\n\n\t\tmfrac.appendChild(d.createElementNS(NAMESPACE,'mi'))\n\t\t\t.appendChild(d.createTextNode('yy'));\n\n\t\td.body.appendChild(div);\n\n\t\thasMathML = div.offsetHeight > div.offsetWidth;\n\t}\n\n\treturn hasMathML;\n};\n\n/**\n * Performs a simple test to see if we're on mobile or not.\n * @param {Window=} win\n * @static\n * @returns {Boolean} returns true if mobile\n */\nvar isMobile = function (win) {\n\n\twin = win || window;\n\n\ttry {\n\t\twin.document.createEvent('TouchEvent');\n\t\t// Surface tablets have touch events, so we use the Pointer Lock API to detect them\n\t\treturn !can(win.document, 'exitPointerLock') || !can(win.document, 'mozExitPointerLock');\n\t} catch (e) {\n\t\t// Opera Mini and IE10M don't support touch events\n\t\t// execCommand is only on desktop browsers\n\t\treturn !can(win.document, 'execCommand');\n\t}\n};\n\n\n/**\n * Saves a property to the results array and returns its index.\n * @param {*} result\n * @returns {Number}\n */\nvar save = function (result) {\n\tif (typeof result === 'boolean') {\n\t\tresults.push(result === true ? '1' : '0');\n\t} else if (typeof result === 'number') {\n\t\tresults.push(result + '');\n\t} else {\n\t\tresults.push(result);\n\t}\n\treturn results.length - 1;\n};\n\n\n/**\n * Uses the min and max versions of a browser to determine its version.\n * @param {Number} uaVersion\n * @param {Number} minVersion\n * @param {Number=} maxVersion\n * @static\n * @returns {Number} returns version number\n */\nvar getVersion = function (uaVersion, minVersion, maxVersion) {\n\tvar actualVersion = minVersion;\n\tif (uaVersion >= minVersion) {\n\t\tif (!maxVersion || uaVersion <= maxVersion) {\n\t\t\tactualVersion = uaVersion;\n\t\t} else if (maxVersion && uaVersion > maxVersion) {\n\t\t\tactualVersion = maxVersion;\n\t\t}\n\t}\n\treturn actualVersion;\n};\n\n/**\n * Searches for a match between the regex and specified string.\n * @param {RegExp} regex\n * @param {String} ua\n * @static\n * @returns {*|Boolean} returns true if match found\n */\nvar looksLike = function (regex, ua) {\n\t'use strict';\n\treturn regex.test(ua);\n};\n\n/**\n * Parses the result of the RegExp match if it exists.\n * Gracefully falls back to the default version if not.\n * @param {String} ua\n * @param {RegExp} regex\n * @param {Number=} radix\n * @static\n * @returns {Number} returns the regex match or default version\n */\nvar parseIntIfMatch = function (ua, regex, radix) {\n\treturn ua.match(regex) !== null ? parseInt(ua.match(regex)[1], radix || 10) : DEFAULT_VERSION;\n};\n\n/**\n * Parses the floating point value of the RegExp match if found.\n * Gracefully falls back to the default if not.\n * @param {String} ua\n * @param {RegExp} regex\n * @static\n * @returns  returns the regex match or the default version\n */\nvar parseFloatIfMatch = function (ua, regex) {\n\treturn ua.match(regex) !== null ? parseFloat(ua.match(regex)[1]) : DEFAULT_VERSION;\n};\n\n/**\n * Determines the version of Android being used.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the Android version\n */\nvar getAndroidVersion = function (win, uaVersion) {\n\n\tvar nav = win.navigator,\n\t\tandroidVersion = DEFAULT_VERSION;\n\n\tif (can(nav, 'sendBeacon')) {\n\t\tandroidVersion = getVersion(uaVersion, 5.0, Infinity);\n\t} else if (can(has('performance', win), 'now')) {\n\t\tandroidVersion = getVersion(uaVersion, 4.4);\n\t} else if (has('FileList', win)) {\n\t\tandroidVersion = getVersion(uaVersion, 4.0, 4.3);\n\t} else {\n\t\tandroidVersion = getVersion(uaVersion, 2.1, 4.0);\n\t}\n\n\treturn androidVersion;\n};\n\n/**\n * Determines the version of Chrome being used.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the Chrome version\n */\nvar getChromiumVersion = function (win, uaVersion) {\n\n\tvar chromiumVersion = DEFAULT_VERSION;\n\t// no session history management - version 4 - api\n\t// geolocation - version 5 - api\n\t// web notifications(prefixed) - version 5 - api\n\t// server-sent DOM events - version 6 - api\n\t// FileReader - version 6 - API\n\t// inline svg - version 7 - html5\n\t// typed arrays - version 7 - api\n\t// classList DOMTokenList - version 8 - API\n\t// defer attribute for external scripts - version 8 - html5\n\t// progress meter - version 8 - html5\n\t// matchMedia - version 9 - API\n\t// webP image format, partial support - version 9 - other\n\t// form validation - version 10 - html5\n\t// getComputedStyle - version 11 - html5\n\t// IndexedDB (prefixed)- version 11 - API\n\t// Details and summary elements - version 12 - html5\n\t// Navigation timing API - version 13 - API\n\t// File API, full support - version 13 - API\n\t// Web sockets, full support - version 14 - API\n\t// Full screen API (prefixed)- version 15 - API\n\t// WebGL, 3D Canvas Graphics - version 18 - API/HTML5 -- unreliable indicator\n\t// WebVVT - version 18 - other\n\t// Blob constructing - version 20 - API\n\t// high resolution time api (prefixed) - version 20 - API\n\t// Color input type - version 20 - HTML5\n\t// getUserMedia API - version 21 - API\n\t// web notifications - version 22 - api\n\t// touch events - version 22 - API/HTML5\n\t// Blob URLs - version 23 - API\n\t// WebRTC Peer Connection (prefixed)- version 23 - API\n\t// webP image format, full support - version 23 - other\n\t// requestAnimationFrame - version 24 - API\n\t// high resolution time api - version 24 - API\n\t// User timing API - version 25 - API\n\t// web speach api(prefixed) - version 25 - api\n\t// shadow dom, prefixed - version 25 - html5\n\t// HTML templates - version 26 - html5\n\t// mutation observer - version 27 - API\n\t// Canvas blend - version 30 - API\n\t// vibration API - version 30 - API\n\t// Promises - version 32 - api\n\t// page visibility - version 33 - api\n\t// Opus codec - version 33 - other\n\t// matches() DOM method - version 34 - API\n\t// srcset attribute - version 34 - api\n\t// shadow dom - version 35 - api/html5\n\t// toolbar/context menu - version 36 - html5\n\t// scoped css - version 36 - html5\n\tif (has('Proxy', win)) {\n\t\tchromiumVersion = getVersion(uaVersion, 49, MAX_BROWSER_VER);\n\t} else if (has('PushManager', win)) {\n\t\tchromiumVersion = getVersion(uaVersion, 44, 48);\n\t} else if (can(win.navigator, 'permissions')) {\n\t\tchromiumVersion = getVersion(uaVersion, 43);\n\t} else if (can(win.navigator, 'sendBeacon')) {\n\t\tchromiumVersion = getVersion(uaVersion, 39, 42);\n\t} else if (can(win.navigator, 'getBattery')) {\n\t\tchromiumVersion = getVersion(uaVersion, 38);\n\t} else if (can(has('crypto', win), 'subtle')) {\n\t\tchromiumVersion = getVersion(uaVersion, 37);\n\t} else if (can(new Image(), 'srcset')) { // Chrome 34+\n\t\tchromiumVersion = getVersion(uaVersion, 34, 36);\n\t} else if (can(win.document, 'visibilityState')) { // Chrome 33+\n\t\tchromiumVersion = getVersion(uaVersion, 33);\n\t} else if (has('Promise', win)) { // Chrome 32+\n\t\tchromiumVersion = getVersion(uaVersion, 32);\n\t} else if (can(win.navigator, 'vibrate')) { // Chrome 30+\n\t\tchromiumVersion = getVersion(uaVersion, 30, 31);\n\t} else if (has('MutationObserver', win)) { // Chrome 27+\n\t\tchromiumVersion = getVersion(uaVersion, 27, 29);\n\t} else if (can(win.document.createElement('template'), 'content')) { // Chrome 26+\n\t\tchromiumVersion = getVersion(uaVersion, 26);\n\t} else if (can(has('performance', win), 'mark')) { // Chrome 25+\n\t\tchromiumVersion = getVersion(uaVersion, 25);\n\t} else if (has('requestAnimationFrame', win)) { // Chrome 24+\n\t\tchromiumVersion = getVersion(uaVersion, 24);\n\t} else if (can(has('URL', win), 'createObjectURL')) { // Chrome 23+\n\t\tchromiumVersion = getVersion(uaVersion, 23);\n\t} else if (has('Notification', win)) { // Chrome 22+\n\t\tchromiumVersion = getVersion(uaVersion, 22);\n\t} else if (can(win.navigator, 'webkitGetUserMedia')) { // Chrome 21+\n\t\tchromiumVersion = getVersion(uaVersion, 21);\n\t} else if (has('Blob', win)) { // Chrome 20+\n\t\tchromiumVersion = getVersion(uaVersion, 20);\n\t} else if (can(win.document, 'webkitRequestFullscreen')) { // Chrome 15+\n\t\tchromiumVersion = getVersion(uaVersion, 15, 19);\n\t} else if (can(has('performance', win), 'timing')) { // Chrome 13+\n\t\tchromiumVersion = getVersion(uaVersion, 13, 14);\n\t} else if (can(win.document.createElement('details'), 'open')) { // Chrome 12+\n\t\tchromiumVersion = getVersion(uaVersion, 12);\n\t} else if (has('webkitIndexedDB', win)) { // Chrome 11+\n\t\tchromiumVersion = getVersion(uaVersion, 11);\n\t} else if (can(win.document.createElement('input'), 'checkValidity')) { // Chrome 10+\n\t\tchromiumVersion = getVersion(uaVersion, 10);\n\t} else if (has('matchMedia', win)) { // Chrome 9+\n\t\tchromiumVersion = getVersion(uaVersion, 9);\n\t} else if (can(win.document.createElement('_'), 'classList')) { // Chrome 8+\n\t\tchromiumVersion = getVersion(uaVersion, 8);\n\t} else if (has('Uint32Array', win)) { // Chrome 7+\n\t\tchromiumVersion = getVersion(uaVersion, 7);\n\t} else if (has('FileReader', win)) { // Chrome 6+\n\t\tchromiumVersion = getVersion(uaVersion, 6);\n\t} else if (has('webkitNotification', win)) { // Chrome 5+\n\t\tchromiumVersion = getVersion(uaVersion, 5);\n\t} else if (can(has('history', win), 'replaceState')) { // Chrome 4+\n\t\tchromiumVersion = getVersion(uaVersion, 4);\n\t} else {\n\t\tchromiumVersion = getVersion(uaVersion, 0, 3);\n\t}\n\treturn chromiumVersion;\n};\n\n/**\n * @private\n * @param {Window} win\n * @param {Number} uaVersion\n * @returns {Number}\n */\nvar getGeckoVersion = function (win, uaVersion) {\n\n\tvar geckoVersion = DEFAULT_VERSION,\n\t\td = win.document,\n\t\tnav = win.navigator;\n\t// Detect all versions of browsers who are using gecko as their rendering engine, prioritizing Firefox\n\n\t// all versions:\n\t// optimal version coverage:\n\t// versions accounted for:\n\t// versions covered by feature testing:\n\tif (has('PushManager', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 44, MAX_BROWSER_VER);\n\t} else if (has('MessageChannel', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 41, 43);\n\t} else if (has('fetch', win)) {\n\t\tgeckoVersion = getVersion(uaVersion, 39, 40);\n\t} else if (can(has('performance', win), 'mark')) {\n\t\tgeckoVersion = getVersion(uaVersion, 38);\n\t} else if (can(has('crypto', win), 'subtle')) {\n\t\tgeckoVersion = getVersion(uaVersion, 34, 37);\n\t} else if (can(win.navigator, 'sendBeacon')) {\n\t\tgeckoVersion = getVersion(uaVersion, 31, 33);\n\t} else if (has('SharedWorker', win)) { // FF 29+\n\t\tgeckoVersion = getVersion(uaVersion, 29, 30);\n\t} else if (has('AudioContext', win)) { // FF 25+\n\t\tgeckoVersion = getVersion(uaVersion, 25, 28);\n\t} else if (has('requestAnimationFrame', win)) { // FF 23+\n\t\tgeckoVersion = getVersion(uaVersion, 23, 24);\n\t} else if (has('Notification', win)) { // FF 22+\n\t\tgeckoVersion = getVersion(uaVersion, 22);\n\t} else if (can(d, 'hidden')) { // FF 18+\n\t\tgeckoVersion = getVersion(uaVersion, 18, 21);\n\t} else if (can(nav, 'mozGetUserMedia')) { // FF 17+\n\t\tgeckoVersion = getVersion(uaVersion, 17);\n\t} else if (has('indexedDB', win)) { // FF 16+\n\t\tgeckoVersion = getVersion(uaVersion, 16);\n\t} else if (can(has('performance', win), 'now')) { // FF 15+\n\t\tgeckoVersion = getVersion(uaVersion, 15);\n\t} else if (has('MutationObserver', win)) { // FF 14+\n\t\tgeckoVersion = getVersion(uaVersion, 14);\n\t} else if (has('Blob', win)) { // FF 13+\n\t\tgeckoVersion = getVersion(uaVersion, 13);\n\t} else if (has('WebSocket', win)) { // FF 11+\n\t\tgeckoVersion = getVersion(uaVersion, 11, 12);\n\t} else if (can(nav, 'mozBattery')) { // FF 10+\n\t\tgeckoVersion = getVersion(uaVersion, 10);\n\t} else if (can(has('performance', win), 'timing')) { // FF 7+\n\t\tgeckoVersion = getVersion(uaVersion, 7, 9);\n\t} else if (has('matchMedia', win)) { // FF 6+\n\t\tgeckoVersion = getVersion(uaVersion, 6);\n\t} else if (has('Uint32Array', win)) { // FF 4+\n\t\tgeckoVersion = getVersion(uaVersion, 4, 5);\n\t} else if (has('FileReader', win)) { // FF 3.6\n\t\tgeckoVersion = getVersion(uaVersion, 3.6);\n\t} else if (has('JSON', win)) { // FF 3.5+\n\t\tgeckoVersion = getVersion(uaVersion, 3.5);\n\t} else if (has('postMessage', win)) { // FF 3+\n\t\tgeckoVersion = getVersion(uaVersion, 3);\n\t} else {\n\t\tgeckoVersion = getVersion(uaVersion, 0, 2.9);\n\t}\n\n\treturn geckoVersion;\n};\n\n/**\n * @private\n * @param {Window} win\n * @param {Number} uaVersion\n * @returns {Number}\n */\nvar getTridentVersion = function (win, uaVersion) {\n\n\tvar tridentVersion = DEFAULT_VERSION,\n\t\td = win.document;\n\t// Detect all IE versions possible by feature detection\n\n\t// all versions:\t\t\t\t\t\t1.0, 2.0, 3.0, 4.0, 5.0, 5.2, 5.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\t// optimal version coverage:\t\t\t6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\t// versions accounted for:\t\t\t\t3-11\n\t// versions covered by feature testing: 3.0, 4.0, 5.0, 5.5, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0\n\tif (can(d, 'pointerLockElement')) {\n\t\ttridentVersion = getVersion(uaVersion, 13, MAX_BROWSER_VER);\n\t} else if (has('Proxy', win)) {\n\t\ttridentVersion = getVersion(uaVersion, 12);\n\t} else if (has('MutationObserver', win)) { // IE 11+\n\t\ttridentVersion = getVersion(uaVersion, 11);\n\t} else if (has('atob', win)) { // IE 10+\n\t\ttridentVersion = getVersion(uaVersion, 10);\n\t} else if (has('addEventListener', win)) { // IE 9+\n\t\ttridentVersion = getVersion(uaVersion, 9);\n\t} else if (has('localStorage', win)) { // IE 8+\n\t\ttridentVersion = getVersion(uaVersion, 8);\n\t} else if (can(d, 'all') && has('XMLHttpRequest', win) && !has('XDomainRequest', win) && !has('opera', win)) { // IE 7\n\t\ttridentVersion = getVersion(uaVersion, 7);\n\t} else if (can(d, 'all') && !has('XMLHttpRequest', win)) { // IE 6\n\t\ttridentVersion = getVersion(uaVersion, 6);\n\t} else { // IE 3 - 5.5\n\t\ttridentVersion = DEFAULT_VERSION;\n\t}\n\n\treturn tridentVersion;\n};\n\n /**\n * See https://en.wikipedia.org/wiki/Trident_(layout_engine)\n * @private\n * @param {Number} ver\n * @returns {Number}\n */\nvar getTridentEngineVersion = function (ver) {\n\n\tvar engineVersion = DEFAULT_VERSION;\n\n\tif (ver >= 11) {\n\t\tengineVersion = 7;\n\t} else if (ver === 10) {\n\t\tengineVersion = 6;\n\t} else if (ver === 9) {\n\t\tengineVersion = 5;\n\t} else if (ver === 8) {\n\t\tengineVersion = 4;\n\t} else if (ver <= 7) {\n\t\tengineVersion = 3;\n\t}\n\n\treturn engineVersion;\n};\n\n/**\n * Returns the version of the Safari browser.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number} returns the version of Safari\n */\nvar getSafariVersion = function (win, uaVersion) {\n\n\tvar safariVersion = DEFAULT_VERSION,\n\t\td = win.document,\n\t\tnav = win.navigator;\n\n    if (has('WebAssembly', win)) {\n        safariVersion = getVersion(uaVersion, 11.0, Infinity);\n    } else if (has ('Intl', win)) {\n    \t// 10.10 chosen to account for any possible patch releases in the future\n        safariVersion = getVersion(uaVersion, 10.0, 10.10);\n    } else if (can(has('CSS', win), 'supports')) {\n\t\tsafariVersion = getVersion(uaVersion, 9.0, 9.3);\n\t} else if (has('indexedDB', win)) {\n\t\tsafariVersion = getVersion(uaVersion, 8.0, 8.4);\n\t} else if (has('execCommand', d)) {\n\t\tsafariVersion = getVersion(uaVersion, 7.0, 7.1);\n\t} else if (has('requestAnimationFrame', win)) {\n\t\tsafariVersion = getVersion(uaVersion, 6.0, 6.1);\n\t} else if (has('Uint32Array', win)) {\n\t\t// Safari 6533.18.5 - iOS 4.3.5\n\t\tsafariVersion = getVersion(uaVersion, 5.1);\n\t} else if (can(nav, 'geolocation')) {\n\t\tsafariVersion = getVersion(uaVersion, 5.0);\n\t} else if (can(nav, 'onLine')) {\n\t\tsafariVersion = getVersion(uaVersion, 4.2, 4.3);\n\t} else if (has('JSON', win)) {\n\t\t// Safari 6531.22.7 - iOS 4.0.2\n\t\tsafariVersion = getVersion(uaVersion, 4.0, 4.1);\n\t} else if (has('postMessage', win)) {\n\t\t// webkit 531.21.10 - iOS 3.2.2\n\t\t// webkit 528.16 - iOS 3.1.3\n\t\tsafariVersion = getVersion(uaVersion, 3.2);\n\t} else {\n\t\tsafariVersion = getVersion(uaVersion, 0, 3.1);\n\t}\n\n\treturn safariVersion;\n};\n\n/**\n * Creates a Browser instance with its attributed Kindle values.\n * @param {Window} win\n * @param {Number} uaVersion\n * @static\n * @returns {Number}\n */\nvar getKindleVersion = function (win, uaVersion) {\n\n\tvar kindleVersion = DEFAULT_VERSION,\n\t\td = win.document;\n\n\tif (can(d, 'pointerLockElement')) {\n\t\tkindleVersion = getVersion(uaVersion, 3.0, Infinity);\n\t} else if (has('PerformanceTiming', win)) {\n\t\tkindleVersion = getVersion(uaVersion, 2.0);\n\t} else {\n\t\tkindleVersion = getVersion(uaVersion, 1.0);\n\t}\n\n\treturn kindleVersion;\n};\n\n/**\n * Creates a Browser instance with its attributed OS and device type values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the browser instance\n */\nvar getOtherOS = function (win, ua) {\n\n\tvar otherBrowser = new Browser();\n\n\tif (has('wiiu', win)) {\n\t\totherBrowser.os.name = 'Wii';\n\t\totherBrowser.os.version = 'U';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/Wii/i, ua)) {\n\t\totherBrowser.os.name = 'Wii';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/PlayStation.4/i, ua)) {\n\t\totherBrowser.os.name = 'PlayStation';\n\t\totherBrowser.os.version = '4';\n\t\totherBrowser.name = 'NetFront';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/PlayStation/i, ua)) {\n\t\totherBrowser.os.name = 'PlayStation';\n\t\totherBrowser.os.version = '3';\n\t\totherBrowser.console = true;\n\t} else if (looksLike(/NgetOtherOSokiaN/i, ua)) {\n\t\totherBrowser.os.name = 'Symbian';\n\t\totherBrowser.mobile = true;\n\t} else if (looksLike(/blackberry|RIM/i, ua)) {\n\t\totherBrowser.os.name = 'Blackberry';\n\t\totherBrowser.mobile = true;\n\t} else if (win.navigator && win.navigator.platform === 'X11' || looksLike(/Linux/i, ua)) {\n\t\totherBrowser.os.name = 'Linux';\n\t\totherBrowser.desktop = true;\n\t} else {\n\t\totherBrowser.os.name = 'Unknown';\n\t}\n\treturn otherBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Apple values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getAppleOS = function (win, ua) {\n\n\tvar mac = /Mac/i,\n\t\tiOS = /iPhone|iPad|iPod/i,\n\t\tappleBrowser = new Browser(),\n\t\tiOSVersion = DEFAULT_VERSION,\n\t\tmacVersion = DEFAULT_VERSION;\n\n\t// Mozilla/5.0 (iPhone; CPU iPhone OS 7_1 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D167 Safari/9537.53\n\t// webviews will not have Safari in their user-agent string\n\tif ((iOS.test(ua) || iOS.test(win.navigator.platform)) || !looksLike(/Safari|Firefox|Chrome/i, ua)) {\n\t\tif (!looksLike(/Version\\/\\d\\.\\d/i, ua)) {\n\t\t\tappleBrowser.ua.version = '2.0';\n\t\t} else {\n\t\t\tif (looksLike(/.OS.(\\d.\\d+)/i, ua)) {\n\t\t\t\tiOSVersion = (ua.match(/.OS.(\\d.\\d+)/i)[1].replace('_','.'));\n\t\t\t} else if (looksLike(/.Version\\/(\\d\\.\\d+)/i, ua)) {\n\t\t\t\tiOSVersion = (ua.match(/.Version\\/(\\d\\.\\d+)/i)[1]);\n\t\t\t}\n\t\t}\n\t\tappleBrowser.ua.version = appleBrowser.os.version = iOSVersion;\n\t\tappleBrowser.os.name = 'iOS';\n\t\tappleBrowser.tablet = /ipad/i.test(win.navigator.platform);\n\t\tappleBrowser.mobile = /iphone|ipod/i.test(win.navigator.platform);\n\t} else if (mac.test(ua) || mac.test(win.navigator.platform)) {\n\t\tmacVersion = parseIntIfMatch(ua, /Mac.OS.X.10.(\\d+)/i, 10); // this format was introduced at 3.0+\n\t\tif (macVersion > 0) {\n\t\t\tappleBrowser.os.name = 'Mac';\n\t\t\tappleBrowser.os.version = '10.' + macVersion;\n\t\t}\n\t\tappleBrowser.desktop = true;\n\t}\n\n\treturn appleBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Windows values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getMicrosoftOS = function (win, ua) {\n\n\tvar microsoftBrowser = new Browser();\n\n\tif (looksLike(/XBox One/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Xbox';\n\t\tmicrosoftBrowser.os.version = 'One';\n\t\tmicrosoftBrowser.name = 'Internet Explorer';\n\t\tmicrosoftBrowser.version = '10.0';\n\t\tmicrosoftBrowser.console = true;\n\t} else if (looksLike(/Xbox/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Xbox';\n\t\tmicrosoftBrowser.os.version = '360';\n\t\tmicrosoftBrowser.name = 'Internet Explorer';\n\t\tmicrosoftBrowser.version = '7.0';\n\t\tmicrosoftBrowser.console = true;\n\t} else {\n\t\tmicrosoftBrowser.os.name = 'Windows';\n\t\tif (looksLike(/IEMobile/i, ua)) {\n\t\t\tmicrosoftBrowser.mobile = true;\n\t\t\tmicrosoftBrowser.os.name = 'Windows Phone';\n\t\t\tif (looksLike(/Windows.Phone.(?:os)?\\s?(\\d\\d?\\.?\\d?\\d?)/i, ua)) {\n\t\t\t\tmicrosoftBrowser.os.version = ua.match(/Windows.Phone.(?:os)?\\s?(\\d\\d?\\.?\\d?\\d?)/i)[1];\n\t\t\t} else if (looksLike(/WP(\\d\\d?\\.?\\d?\\d?)/i, ua)) {\n\t\t\t\tmicrosoftBrowser.os.version = ua.match(/WP(\\d\\d?\\.?\\d?\\d?)/i)[1];\n\t\t\t}\n\t\t} else if (looksLike(/Windows.NT./i, ua)) {\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t\tvar pcVersion = parseFloatIfMatch(ua, /Windows.NT.(\\d\\d?\\.?\\d?\\d?)/i); // this format was introduced at 3.0+\n\t\t\t// List pulled from http://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n\t\t\tswitch (pcVersion) {\n\t\t\t\tcase 10:\n\t\t\t\t\tmicrosoftBrowser.os.version = '10.0';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.3:\n\t\t\t\t\tmicrosoftBrowser.os.version = '8.1';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.2:\n\t\t\t\t\tmicrosoftBrowser.os.version = '8';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6.1:\n\t\t\t\t\tmicrosoftBrowser.os.version = '7';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'Vista';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.2:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2003';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.1:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'XP';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5.01:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2000 SP1';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tmicrosoftBrowser.os.version = '2000';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tmicrosoftBrowser.os.version = 'NT';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tmicrosoftBrowser.os.version = DEFAULT_VERSION;\n\t\t\t}\n\t\t} else if (looksLike(/Windows.9(\\d)/i, ua)) {\n\t\t\tmicrosoftBrowser.os.version = '9x'; // 95, 98, or Me, which all must have a market share of nothingness by now so we dont care which it is\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t} else if (looksLike(/Windows.CE/i, ua)) {\n\t\t\tmicrosoftBrowser.os.version = 'CE'; // only matters that its mobile\n\t\t\tmicrosoftBrowser.mobile = true;\n\t\t} else {\n\t\t\tmicrosoftBrowser.os.version = DEFAULT_VERSION + '';\n\t\t\tmicrosoftBrowser.desktop = true;\n\t\t}\n\t}\n\t// special detection for MS Surfaces specifically\n\tif(looksLike(/Touch/i, ua) && !looksLike(/IEMobile/i, ua)) {\n\t\tmicrosoftBrowser.os.name = 'Window RT';\n\t}\n\n\treturn microsoftBrowser;\n};\n\n/**\n * Creates a Browser instance with its attributed Android values.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getAndroidOS = function (win, ua) {\n\n\tvar androidBrowser = new Browser();\n\n\tandroidBrowser.ua.version = parseFloatIfMatch(ua, /Android\\s(\\d+\\.\\d+)/i);\n\tandroidBrowser.os.name = 'Android';\n\tandroidBrowser.mobile = true;\n\n\tif (looksLike(/Chrome/i, ua)) {\n\t\t// modern Android browsers use the chrome engine\n\t\tandroidBrowser.engine.name = 'chrome';\n\t\tandroidBrowser.engine.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10);\n\t} else if (looksLike(/AppleWebKit/i, ua)) {\n\t\t// old Android browsers uses webkit\n\t\tandroidBrowser.engine.name = 'webkit';\n\t\tandroidBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t} else {\n\t\tandroidBrowser.engine.name = 'unknown';\n\t}\n\t// for now, we use the same logic for Android's browser and os detection\n\tandroidBrowser.os.version = getAndroidVersion(win, androidBrowser.ua.version) + '';\n\n\treturn androidBrowser;\n};\n\n/**\n * Returns the Kindle's OS.\n * @param {Window} win\n * @param {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getKindleOS = function (win, ua) {\n\n\tvar kindleBrowser = new Browser();\n\n\tif (looksLike(/Silk/i, ua)) {\n\t\tkindleBrowser.engine.name = 'silk';\n\t\tkindleBrowser.engine.version = parseIntIfMatch(ua, /Silk\\/(\\d+)/i, 10);\n\t\t// set the detected version equal to silk by default\n\t\tkindleBrowser.ua.verison = kindleBrowser.engine.version;\n\t} else if (looksLike(/AppleWebKit/i, ua)) {\n\t\tkindleBrowser.engine.name = 'webkit';\n\t\tkindleBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t\t// if the kindle doesn't have silk in the userAgent, something is wonky\n\t\tkindleBrowser.ua.version = 1;\n\t}\n\n\tif (looksLike(/Version/i, ua)) {\n\t\t// some kindles have a Version property in their userAgent\n\t\tkindleBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d+\\.\\d+)/i);\n\t}\n\n\tkindleBrowser.version = getKindleVersion(win, kindleBrowser.ua.version);\n\tkindleBrowser.tablet = true;\n\n\treturn kindleBrowser;\n};\n\n/**\n * Reads the user agent string to determine OS.\n * @param {Window} win\n * @param  {String} ua\n * @static\n * @returns {Browser} returns the Browser instance\n */\nvar getOsFromUa = function (win, ua) {\n\n\tvar unknownOS = new Browser();\n\n\tif (looksLike(/Win|IEMobile/i, ua)) {\n\t\tunknownOS = getMicrosoftOS(win, ua);\n\t} else if (looksLike(/Mac|iPhone|iPad|iPod/i, ua)) {\n\t\tunknownOS = getAppleOS(win, ua);\n\t} else if (looksLike(/Android/i, ua)) {\n\t\tunknownOS = getAndroidOS(win, ua);\n\t} else if (looksLike(kindleBrowser, ua)) {\n\t\tunknownOS = getKindleOS(win, ua);\n\t} else {\n\t\tunknownOS = getOtherOS(win, ua);\n\t}\n\treturn unknownOS;\n};\n\n/**\n * Returns an object containing browser details (e.g. name, os, version, etc.).\n * @param {Window=} win\n * @param {String=} userAgent\n * @static\n * @returns {Browser} returns the Browser instance\n * @example\n * ```js\n * var os = browser.detect().os.name;\n *\n * console.log(os); // outputs OS name (e.g. Windows, Mac, Android, etc.)\n * ```\n */\nvar detect = function (win, userAgent) {\n\n\tvar detectedBrowser = new Browser(),\n\t\tbrowserType = '',\n\t\tw = win || window,\n\t\td = w.document,\n\t\tua = userAgent || w.navigator.userAgent,\n\t\tnav = w.navigator,\n\t\tstyle = w.document.documentElement.style;\n\n\t// reset the results array\n\tresults = [];\n\n\t// see if this is a mobile browser\n\tdetectedBrowser.mobile = isMobile(w);\n\n\t// run thru mobile detection first if applicable\n\tif (detectedBrowser.mobile) {\n\t\t// MS Surfaces pass the mobile test, so we account for them here\n\t\t// IE Mobile sometimes contain touch in the UA\n\t\tif (looksLike(/Win/i, ua) && looksLike(/Touch/i, ua) && !looksLike(/IEMobile/i, ua)) {\n\t\t\tbrowserType = TYPE.MICROSOFT;\n\t\t// Kindle feature support varies greatly, and they retain low market-share, so we trust the user agent for now\n\t\t} else if (looksLike(kindleBrowser, ua)) {\n\t\t\tbrowserType = TYPE.KINDLE;\n\t\t} else if (can(nav, 'permissions')) {\n\t\t\t// Chrome is the only mobile platform with permissions\n\t\t\tbrowserType = TYPE.CHROME_MOBILE;\n\t\t} else if (has('ondevicelight', w)) {\n\t\t\t// Only FF Mobile has the ambient light API\n\t\t\tbrowserType = TYPE.FIREFOX_MOBILE;\n\t\t} else if (has('setImmediate', w)) {\n\t\t\t// IE is the only mobile with setImmediate\n\t\t\tbrowserType = TYPE.MICROSOFT_MOBILE;\n\t\t} else if (!has('matchMedia', w)) {\n\t\t\t// only Opera Mini lacks matchMedia, thanks for making this easy Opera!\n\t\t\tbrowserType = TYPE.OPERA_MINI;\n\t\t} else if (has('speechSynthesis', w)) {\n\t\t\t// iOS began supporting internationalization api in iOS 10\n\t\t\t// iOS Safari has speech synth support that goes way back to older versions too\n\t\t\tbrowserType = TYPE.SAFARI_MOBILE;\n\t\t} else if (has('isFinite', w) || can(has('connection', nav), 'type')) {\n\t\t\t// Android is the only remaining one with isFinite\n\t\t\t// Very old Android supports nav.connection.type\n\t\t\tif (mathMLSupport(d)) {\n\t\t\t\t// Detect mathML to find webviews reporting themselves as Android\n\t\t\t\tbrowserType = TYPE.WEBVIEW;\n\t\t\t} else {\n\t\t\t\t// Android has never supported mathML as of 4.4.4\n\t\t\t\tbrowserType = TYPE.ANDROID;\n\t\t\t}\n\t\t} else if (!has('Intl', w)) {\n\t\t\t// blackBerry is the only one left without Internationalization\n\t\t\tbrowserType = TYPE.BLACKBERRY;\n\t\t} else if (has('webkitRequestFileSystem', w)) {\n\t\t\t// Opera is the only one remaining with a File System API\n\t\t\tbrowserType = TYPE.OPERA_ANDROID;\n\t\t} else {\n\t\t\tbrowserType = TYPE.UNKNOWN_MOBILE;\n\t\t}\n\t} else if (!has('EventSource', w) && can(nav, 'onLine')) {\n\t\tbrowserType = TYPE.MICROSOFT;\n\t} else if (has('InstallTrigger', w)) {\n\t\tbrowserType = TYPE.FIREFOX;\n\t} else if (has('chrome', w) && !has('opera', w) && !looksLike(/\\sOPR\\/\\d+/i, ua)) {\n\t\tbrowserType = TYPE.CHROME;\n\t} else if (has('opera', w) || looksLike(/\\sOPR\\/\\d+/i, ua)) {\n\t\tbrowserType = TYPE.OPERA;\n\t} else if (!has('webkitRequestFileSystem', w)) {\n\t\tbrowserType = TYPE.SAFARI;\n\t} else {\n\t\tbrowserType = TYPE.UNKNOWN;\n\t}\n\n\t// now that we know the environment, we run feature detection specific to it\n\tif (browserType === TYPE.MICROSOFT) {\n\n\t\tdetectedBrowser = getMicrosoftOS(w, ua);\n\t\tdetectedBrowser.engine.name = 'trident';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Edge\\/(\\d+)/i, 10);\n\n\t\tif (detectedBrowser.ua.version === DEFAULT_VERSION) {\n\t\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /MSIE\\/(\\d+)/i, 10);\n\t\t}\n\n\t\tdetectedBrowser.version = getTridentVersion(w, detectedBrowser.ua.version);\n\t\tdetectedBrowser.engine.version = getTridentEngineVersion(detectedBrowser.version);\n\n\t\tif (detectedBrowser.version >= 12) {\n\t\t\tdetectedBrowser.name = 'Edge';\n\t\t} else {\n\t\t\tdetectedBrowser.name = 'Internet Explorer';\n\t\t}\n\n\t\tif (detectedBrowser.name === 'Edge' && !looksLike(/Edge/i, ua)) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t} else if (detectedBrowser.name === 'Internet Explorer' && (!looksLike(/MSIE/i, ua) && !looksLike(/Trident/i, ua))) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t}\n\n\t} else if (browserType === TYPE.FIREFOX) {\n\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Firefox';\n\t\tdetectedBrowser.engine.name = 'gecko';\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /rv:(\\d+)/i, 10);\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Firefox\\/(\\d+)/i, 10);\n\t\tdetectedBrowser.version = getGeckoVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Firefox/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.CHROME) {\n\t\t// Detect all chrome versions possible by feature detection\n\n\t\t// all versions:\t\t\t\t\t\t1-38\n\t\t// optimal version coverage:\t\t\t21, 35, 36, 37, 38\n\t\t// versions accounted for:\t\t\t\t4-38\n\t\t// versions covered by feature testing: 4-13, 15, 20-27, 30, 32-34\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.engine.name = has('CSS', w) ? 'blink' : 'webkit'; // should be all of version 27+ on blink\n\t\t// chrome uses a standard ua format and can always supported indexOf\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10);\n\t\tdetectedBrowser.ua.version = detectedBrowser.engine.version;\n\t\tdetectedBrowser.version = getChromiumVersion(w, detectedBrowser.ua.version);\n\n\t\tdetectedBrowser.name = 'Chrome';\n\n\t\tif (!looksLike(/Chrome/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.OPERA) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\n\t\tif (looksLike(/Presto\\/(\\d+\\.\\d+)/i, ua)) {\n\t\t\tdetectedBrowser.engine.version = parseFloatIfMatch(ua, /Presto\\/(\\d+\\.\\d+)/i);\n\t\t} else if (looksLike(/AppleWebKit\\/(\\d+)/i, ua)) {\n\t\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/i, 10);\n\t\t}\n\n\t\tif (looksLike(/Nintendo/i, ua)) {\n\t\t\tdetectedBrowser.engine.name = 'presto';\n\t\t\tdetectedBrowser.version = '9.0';\n\t\t\tdetectedBrowser.console = true;\n\t\t} else {\n\t\t\tif (can(has('opera', w), 'version')) {\n\t\t\t\tdetectedBrowser.feature.version = parseFloat(w.opera.version()); // presto reveals its version via api\n\t\t\t\tdetectedBrowser.version = detectedBrowser.feature.version;\n\t\t\t\tdetectedBrowser.engine.name = 'presto'; // should be all of version 27+ on blink\n\t\t\t} else {\n\t\t\t\tdetectedBrowser.version = getChromiumVersion(w, detectedBrowser.ua.version);\n\t\t\t\tdetectedBrowser.engine.name = 'blink'; // chrome's blink engine would be the version of the engine here\n\t\t\t\tdetectedBrowser.engine.version = detectedBrowser.version; // chrome's blink engine would be the version of the engine here\n\n\t\t\t\tif (looksLike(/OPR\\/\\d+.\\d+/i, ua)) {\n\t\t\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /OPR\\/\\d+.\\d+/i);\n\t\t\t\t}\n\n\t\t\t\tif (detectedBrowser.version >= 28) { // chrome version is 28+ then it's on chrome's release cycle.\n\t\t\t\t\tdetectedBrowser.version = getVersion(detectedBrowser.ua.version, detectedBrowser.version - 13, MAX_BROWSER_VER); // Guess the version based on chrome's version.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdetectedBrowser.name = 'Opera';\n\n\t\tif (!looksLike(/Opera/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.SAFARI) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/, 10);\n\t\t// all versions:\t\t\t\t\t\t0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 2.0, 3.0, 3.1, 3.2, 4.0, 4.1, 5.0, 5.1, 6.0, 6.1, 7.0, 8.0\n\t\t// optimal version coverage:\t\t\t6.1, 7.0, 8.0\n\t\t// versions accounted for:\t\t\t\t*\n\t\t// versions covered by feature testing: 3.2, 4.0, 4.2, 5.0, 6.0, 7.0\n\t\tdetectedBrowser.desktop = true;\n\n\t\tif (looksLike(/Version\\/(\\d\\.\\d)/i, ua)) {\n\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d\\.\\d)/i); // this format was introduced at 3.0+browser.ua.version = parseFloat(ua.match()[1]);\n\t\t}\n\n\t\tif (looksLike(/Mac.OS.X.10.(\\d+)/i, ua)) {\n\t\t\tvar macVersion = parseIntIfMatch(ua, /Mac.OS.X.10.(\\d+)/i, 10); // this format was introduced at 3.0+\n\t\t\tif (macVersion > 0) {\n\t\t\t\tdetectedBrowser.os.name = 'Mac';\n\t\t\t\tdetectedBrowser.os.version = '10.' + macVersion;\n\t\t\t} else {\n\t\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t}\n\n\t\tdetectedBrowser.name = 'Safari';\n\t\tdetectedBrowser.engine.name = 'webkit';\n\t\tdetectedBrowser.version = getSafariVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Safari/i, ua)) {\n\t\t\tdetectedBrowser.trustworthy = false;\n\t\t}\n\n\t} else if (browserType === TYPE.ANDROID) {\n\n\t\tdetectedBrowser = getAndroidOS(w, ua);\n\t\tdetectedBrowser.name = 'Android';\n\t\tdetectedBrowser.version = getAndroidVersion(w, detectedBrowser.ua.version);\n\n\t\tif (!looksLike(/Android/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.SAFARI_MOBILE) {\n\n\t\tdetectedBrowser = getAppleOS(w, ua);\n\t\t// Feature detect Mobile Safari so we can tell if it's the real deal or an imposter\n\t\tdetectedBrowser.name = 'Mobile Safari';\n\t\tdetectedBrowser.engine.name  = 'webkit';\n\t\tdetectedBrowser.engine.version = parseIntIfMatch(ua, /AppleWebKit\\/(\\d+)/, 10);\n\t\tif (looksLike(/Version\\/(\\d\\.\\d)/i, ua)) {\n\t\t\tdetectedBrowser.ua.version = parseFloatIfMatch(ua, /Version\\/(\\d\\.\\d)/i); // this format was introduced at 3.0+browser.ua.version = parseFloat(ua.match()[1]);\n\t\t}\n\t\t// all versions:\t\t\t\t\t\t1.0, 1.1, 2.0, 2.1, 2.2, 3.0, 3.1, 3.2, 4.0, 4.1, 4.2, 4.3, 5.0, 5.1, 6.0, 6.1, 7.0, 7.1, 8.0\n\t\t// optimal version coverage:\t\t\t6.x, 7.x, 8.x\n\t\t// versions accounted for:\t\t\t\t*\n\t\t// versions covered by feature testing:\t3.2, 4.0, 4.2, 5.0, 6.0, 7.0, 8.0\n\t\tdetectedBrowser.version = getSafariVersion(w, detectedBrowser.ua.version);\n\t\tdetectedBrowser.os.version = detectedBrowser.version;\n\n\t\tif (!looksLike(/Safari/i, ua) || !looksLike(/iPhone|iPad/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.CHROME_MOBILE) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Chrome Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Chrome\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Chrome/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.FIREFOX_MOBILE) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Firefox Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Firefox\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Firefox/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.MICROSOFT_MOBILE) {\n\t\tdetectedBrowser = getMicrosoftOS(w, ua);\n\t\tdetectedBrowser.name = 'Mobile IE';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /IEMobile\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/MSIE/i, ua) || !looksLike(/IEMobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.WEBVIEW) {\n\t\tdetectedBrowser = getAppleOS(w, ua);\n\t\tdetectedBrowser.name = 'iOS Webview';\n\t\tif (!looksLike(/iPhone|iPad|iPod/i, ua) || !looksLike(/Mobile/i, ua)) { detectedBrowser.trustworthy = false; }\n\t} else if (browserType === TYPE.OPERA_MINI) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Opera Mini';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Opera Mini\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Opera/i, ua) || !looksLike(/Mini/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.OPERA_ANDROID) {\n\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\tdetectedBrowser.name = 'Opera Android';\n\t\tdetectedBrowser.ua.version = parseIntIfMatch(ua, /Opera\\/(\\d+)/i, 10); // we trust the UA for now\n\t\tdetectedBrowser.version = detectedBrowser.ua.version;\n\t\tif (!looksLike(/Opera/i, ua) || !looksLike(/Android/i, ua)) { detectedBrowser.trustworthy = false; }\n\n\t} else if (browserType === TYPE.KINDLE) {\n\t\tdetectedBrowser = getKindleOS(w, ua);\n\t\tdetectedBrowser.name = 'Kindle';\n\t\t// we rely on the user agent for all kindle detection, so we can't detect untrustworthiness\n\t} else if (browserType === TYPE.UNKNOWN || browserType === TYPE.UNKNOWN_MOBILE) {\n\t\tif (can(style, 'KhtmlUserInput')) {\n\t\t\tdetectedBrowser.name = 'Linux Browser';\n\t\t\tdetectedBrowser.engine.name = 'khtml';\n\t\t\tdetectedBrowser.os.name = 'Linux';\n\t\t\tdetectedBrowser.desktop = true;\n\t\t} else {\n\t\t\tdetectedBrowser = getOsFromUa(w, ua);\n\t\t\tdetectedBrowser.name = 'Unknown';\n\t\t\tdetectedBrowser.engine.name = 'Unknown';\n\t\t\tdetectedBrowser.os.name = 'Unknown';\n\t\t}\n\t}\n\n\t// if the user agent version is beyond \n\tif (detectedBrowser.ua.version > detectedBrowser.version) {\n\t\tdetectedBrowser.max = MAX.EXCEED;\n\t}\n\n\tmap.TRUSTWORTHY = save(detectedBrowser.trustworthy);\n\tmap.BROWSER_NAME = save(detectedBrowser.name);\n\tmap.BROWSER_VERSION = save(detectedBrowser.version);\n\tmap.ENGINE_NAME = save(detectedBrowser.engine.name);\n\tmap.ENGINE_VERSION = save(detectedBrowser.engine.version);\n\tmap.OS_NAME = save(detectedBrowser.os.name);\n\tmap.OS_VERSION = save(detectedBrowser.os.version);\n\tmap.DESKTOP = save(detectedBrowser.desktop);\n\tmap.MOBILE = save(detectedBrowser.mobile);\n\tmap.TABLET = save(detectedBrowser.tablet);\n\tmap.CONSOLE = save(detectedBrowser.console);\n\tmap.MAX = save(detectedBrowser.max);\n\n\tdetectedBrowser.isIE = (detectedBrowser.name === 'Internet Explorer');\n\tdetectedBrowser.isFF = (detectedBrowser.name === 'Firefox');\n\tdetectedBrowser.isOpera = (detectedBrowser.name === 'Opera');\n\tdetectedBrowser.isChrome = (detectedBrowser.name === 'Chrome');\n\tdetectedBrowser.isSafari = (detectedBrowser.name === 'Safari');\n\n\t/**\n\t * Retrieve any results in the map by name because they're returned in an array without names.\n\t * @param {String} key\n\t * @returns {*}\n\t */\n\tmodule.exports.read = function (key) {\n\t\treturn results[key];\n\t};\n\n\tmodule.exports.map = map;\n\tmodule.exports.results = results;\n\tmodule.exports.details = detectedBrowser;\n\n\treturn detectedBrowser;\n};\n\nexports.detect = detect;\nexports.isMobile = isMobile;\nexports.mathMLSupports = mathMLSupport;\nexports.getVersion = getVersion;\nexports.looksLike = looksLike;\nexports.parseIntIfMatch = parseIntIfMatch;\nexports.parseFloatIfMatch = parseFloatIfMatch;\nexports.getAndroidVersion = getAndroidVersion;\nexports.getChromiumVersion = getChromiumVersion;\nexports.getSafariVersion = getSafariVersion;\nexports.getKindleVersion = getKindleVersion;\nexports.getOtherOS = getOtherOS;\nexports.getAppleOS = getAppleOS;\nexports.getMicrosoftOS = getMicrosoftOS;\nexports.getAndroidOS = getAndroidOS;\nexports.getKindleOS = getKindleOS;\nexports.getOsFromUa = getOsFromUa;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adlibs/lib/detect/browser.js\n// module id = 274\n// module chunks = 2","/**\n * @desc Environment Detection - Gets Data Pertaining to User's Environment\n * @module Environment\n * @typicalname environment\n * @example\n * ```\n * var environment = require(\"adlibs/lib/detect/environment\");\n * ```\n */\n\n/* jshint strict: false, nonstandard: true, browser: true, moz: true, esnext: true, es5: true */\n\n// ****** BEGIN DETECT ENVIRONMENT CODE ******* //\n\n'use strict';\n\nvar win = window,\n\tdoc = win.document,\n\tnav = win.navigator,\n\tcan = require('../canHas').can,\n\thas = require('../canHas').has;\n\n/**\n * Return this ad's position within the parent, in the order of the frames around us.\n * @param pos\n * @private\n * @returns {String}\n */\nvar getFramePosition = function (pos) {\n\tif (win.parent.frames[pos] || pos > 100) {\n\t\tif (win.parent.frames[pos] === window) {\n\t\t\treturn '' + pos;\n\t\t} else {\n\t\t\treturn getFramePosition(pos + 1);\n\t\t}\n\t} else {\n\t\treturn '-1';\n\t}\n};\n\n/**\n * Return the ad's depth in iframes.\n * @param myWin {Object} window object\n * @param depth {Number} nest level\n * @private\n * @returns {Number}\n */\nvar getFrameDepth = function (myWin, depth) {\n\tdepth = depth || 0;\n\tmyWin = myWin || window;\n\n\tif (myWin === top || depth > 100) {\n\t\treturn depth;\n\t} else {\n\t\treturn getFrameDepth(myWin.parent, depth + 1);\n\t}\n};\n\nvar versionMatch = /(\\d+.\\d+)/i;\n\n/**\n * Check the web standards compliant plugin interface for plugins by name.\n * @param name\n * @private\n * @returns {String}\n */\nvar checkPlugin = function (name) {\n\t/**\n\t * @type plugin\n\t * @property description\n\t * @property version\n\t * @property name\n\t */\n\tvar plugin = has(name, has('plugins', nav));\n\tvar\tversion;\n\n\tif (typeof plugin === 'object') {\n\t\tif (versionMatch.test(has('version', plugin).toString())) {\n\t\t\tversion = plugin.version;\n\t\t} else if (versionMatch.test(has('description', plugin).toString())) {\n\t\t\tversion = plugin.description;\n\t\t} else if (versionMatch.test(has('name', plugin).toString())) {\n\t\t\tversion = plugin.name;\n\t\t} else {\n\t\t\tversion = '1.0'; // @todo come up with something a little more scientific\n\t\t}\n\n\t\t// This has to come back with an array because it matched the test above in all cases.\n\t\treturn '' + parseFloat(version.match(versionMatch)[1].replace('_', '.'));\n\t}\n\treturn '-1';\n};\n\n/**\n * Check standards compliant and active x interfaces for the flash plugin version.\n * @private\n * @returns {String}\n */\nvar getFlashVersion = function () {\n\tif (can(nav, 'plugins') && !has('ActiveXObject')) { // standards compliant browsers\n\n\t\treturn checkPlugin('Shockwave Flash'); //Flash version\n\n\t} else if (has('ActiveXObject')) { // must be ie, but not the newest ie 11+ releases\n\n\t\treturn (function () {\n\t\t\t\tvar plugin,\n\t\t\t\t\tpluginVersion;\n\n\t\t\t\ttry {\n\t\t\t\t\tplugin = (new has('ActiveXObject'))('ShockwaveFlash.ShockwaveFlash'); // jshint ignore:line\n\t\t\t\t\tpluginVersion = has('GetVariable', plugin)('$version');\n\t\t\t\t\tif (typeof pluginVersion === 'string') {\n\t\t\t\t\t\tpluginVersion.split(' ')[1].split(',');\n\t\t\t\t\t}\n\t\t\t\t\treturn pluginVersion[0] + '.' + pluginVersion[1];\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//Flash Not Installed\n\t\t\t\t\treturn '-1';\n\t\t\t\t}\n\t\t\t}()) || '-1';\n\t}\n\n\treturn '-1';\n};\n\n/**\n * Detect environmental variables and return them wrapped within an object.\n * @returns {Object} returns the environment object\n * @static\n * @example\n * ```js\n * var flash = environment.detect().flash;\n *\n * console.log(flash) // outputs the version of Flash\n * ```\n *\n */\nvar detect = function () {\n\n\tvar environment = {},\n\t\tzoomRatio = 1,\n\t\tdeviceWidth,\n\t\tpixelDensity,\n\t\tresults = [],\n\t\tmap = {};\n\n\tvar save = function (result) {\n\t\tresults.push(result);\n\t\treturn results.length - 1;\n\t};\n\n\tenvironment.parent_ads = has('length', has('frames', win.parent)) || '-1';\n\tmap.PARENT_ADS = save(environment.parent_ads);\n\n\ttry {\n\t\tenvironment.ad_order = getFramePosition(0);\n\t} catch (ex) {\n\t\tenvironment.ad_order = '-1';\n\t}\n\n\ttry {\n\t\tenvironment.ad_depth = getFrameDepth() + '';\n\t} catch (ex) {\n\t\tenvironment.ad_depth = '-1';\n\t}\n\n\tmap.AD_ORDER = save(environment.ad_order);\n\tmap.AD_DEPTH = save(environment.ad_depth);\n\n\tif (can(screen,'deviceXDPI') && can(screen,'logicalXDPI')) { // old ie, so this must go before the IE check\n\t\tzoomRatio = (screen.deviceXDPI / screen.logicalXDPI).toFixed(3);\n\t} else if (has('all')) { // new ie\n\t\tzoomRatio = (doc.documentElement.offsetHeight / win.innerHeight).toFixed(3);\n\t} else if (has('orientation')) { // mobile webkit\n\t\tdeviceWidth = (Math.abs(win.orientation) === 90) ? screen.height : screen.width;\n\t\tzoomRatio = (deviceWidth / win.innerWidth).toFixed(3);\n\t} else if (has('opera')) {\n\t\tzoomRatio = (top.outerWidth / top.innerWidth).toFixed(3);\n\t} // anything else is obnoxiously complex\n\n\tif (!isFinite(zoomRatio)) {\n\t\tzoomRatio = '-1';\n\t} else if (+zoomRatio !== 1) {\n\t\tzoomRatio = (+zoomRatio).toFixed(3);\n\t}\n\n\tpixelDensity = has('devicePixelRatio') || 1;\n\n\tenvironment.zoom_ratio = zoomRatio;\n\tenvironment.pixel_density = pixelDensity.toFixed(3);\n\tmap.ZOOM_RATIO = save(zoomRatio);\n\tmap.PIXEL_DENSITY = save(pixelDensity.toFixed(3));\n\n\t//d.documentElement.clientWidth; // ad width\n\t//d.documentElement.offsetWidth; // ??\n\t//d.documentElement.scrollWidth; // ??\n\t//\n\t//screen.availHeight; // total screen size available to the browser minus the os ui\n\t//screen.height; // total screen size\n\t//\n\t//w.outerWidth; // potentially as close as we can get on safari and chrome to the window width\n\t//w.innerWidth; // ad width including a check for scrollbars\n\t//\n\t//if (d.documentElement.clientWidth === w.innerWidth) { } // there are no horizontal scroll bars in the ad\n\t//if (d.documentElement.clientHeight === w.innerHeight) { } // there are no horizontal scroll bars in the ad\n\t//\n\t//if (isMobile) {\n\t//\tif (screen.width === screen.availWidth) { console.log(''); } // maximized width\n\t//\telse if (screen.width === screen.availHeight) { console.log(''); } // maximized width\n\t//}\n\t//\n\t//if (screen.height === screen.availHeight) { } // maximized width\n\n\t// Estimated screen size given the current screen, which is the only one we can measure\n\n\tenvironment.screen_w = ((has('width', screen) || '0') * pixelDensity).toFixed(0);\n\tenvironment.screen_h = ((has('height', screen) || '0') * pixelDensity).toFixed(0);\n\n\t// Estimated viewport size, but not really that accurate for IE without getting an event from IE 9-10 per the geometry strat\n\t// @todo fix this because it is definitely not correct the way it's implemented\n\tenvironment.avail_w = ((has('availWidth', screen) || '0') * pixelDensity).toFixed(0);\n\tenvironment.avail_h = Math.max((can(doc, 'documentElement') && has('clientWidth', doc.documentElement)) || 0, has('outerWidth') || 0).toFixed(0);\n\n\t//\n\tenvironment.ad_w = Math.max((can(doc, 'documentElement') && has('clientWidth', doc.documentElement)) || 0, has('innerWidth') || 0).toFixed(0);\n\tenvironment.ad_h = Math.max((can(doc, 'documentElement') && has('clientHeight', doc.documentElement)) || 0, has('innerHeight') || 0).toFixed(0);\n\n\tenvironment.flash = getFlashVersion();\n\n\t// Do not track info from the browser. The Mozilla implementation and Microsoft implements vary quite a bit.\n\tif (can(nav, 'doNotTrack')) {\n\t\tenvironment.dnt = (nav.doNotTrack === 'yes' || parseInt(nav.doNotTrack, 10) === 1) ? '1' : '0';\n\t} else if (can(nav, 'msDoNotTrack')) {\n\t\tenvironment.dnt = (nav.msDoNotTrack === 'yes' || parseInt(nav.msDoNotTrack, 10) === 1) ? '1' : '0';\n\t} else {\n\t\tenvironment.dnt = '-1';\n\t}\n\n\t// Rendering mode the browser is using. This represents a chance to check for quirks mode's target IE version\n\tenvironment.doc_mode = has('documentMode', doc) || '0';\n\n\tmap.SCREEN_W = save(environment.screen_w);\n\tmap.SCREEN_H = save(environment.screen_h);\n\tmap.AVAIL_W = save(environment.avail_w);\n\tmap.AVAIL_H = save(environment.avail_h);\n\tmap.AD_W = save(environment.ad_w);\n\tmap.AD_H = save(environment.ad_h);\n\tmap.FLASH = save(environment.flash);\n\tmap.DNT = save(environment.dnt);\n\tmap.DOC_MODE = save(environment.doc_mode);\n\n\t/**\n\t *\n\t * @returns {Number}\n\t */\n\tmodule.exports.getFlashVersion = function () {\n\t\treturn parseFloat(environment.flash); //Flash Version\n\t};\n\n\t/**\n\t *\n\t * @returns {String}\n\t */\n\tmodule.exports.getFrameDepth = function () {\n\t\treturn environment.ad_depth;\n\t};\n\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getAvailableScreenSize = function () {\n\t\treturn {\n\t\t\theight: environment.avail_h,\n\t\t\twidth: environment.avail_w\n\t\t};\n\t};\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getScreenSize = function () {\n\t\treturn {\n\t\t\theight: environment.screen_h,\n\t\t\twidth: environment.screen_w\n\t\t};\n\t};\n\n\t/**\n\t *\n\t * @returns {{height: (*|String|Undefined), width: (*|String|Undefined)}}\n\t */\n\tmodule.exports.getAdDocSize = function () {\n\t\treturn {\n\t\t\theight: environment.ad_h,\n\t\t\twidth: environment.ad_w\n\t\t};\n\t};\n\n\tmodule.exports.details = environment;\n\tmodule.exports.map = map;\n\tmodule.exports.results = results;\n\n\treturn environment;\n};\n\nmodule.exports.detect = detect;\n\n// ****** BEGIN DETECT ENVIRONMENT CODE ******* //\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adlibs/lib/detect/environment.js\n// module id = 275\n// module chunks = 2","/**\n * @module canHas\n */\n\n'use strict';\n\n/**\n * @desc Can this object use this property?\n * @static\n * @param obj\n * @param propertyName\n * @returns {Boolean}\n * @example\n * ```js\n * var can = require('adlibs/lib/canHas').can;\n * ```\n */\nvar can = function (obj, propertyName) {\n\treturn typeof obj[propertyName] !== 'undefined';\n};\n\n/**\n * @desc Does this window have this object in it?\n * @static\n * @param globalObjectName\n * @param [scope] Alternatively, you can call \"run\" with a more sane method signature.\n * @returns {*}\n * @example\n * ```js\n * var has = require('adlibs/lib/canHas').has;\n * ```\n */\nvar has = function (globalObjectName, scope) {\n\tscope = scope || window;\n\treturn can(scope, globalObjectName) ? scope[globalObjectName] : false;\n};\n\n/**\n * @desc Check to see if this object owns the method as opposed to just inheriting it from another object.\n * @static\n * @param obj\n * @param propertyName\n * @returns {Boolean}\n */\nvar own = function (obj, propertyName) {\n\treturn obj.hasOwnProperty(propertyName);\n};\n\n/**\n * @desc Return a runnable method by default.\n * @static\n * @param obj - Scope to use, or method to run when not providing a method as the second param.\n * @param [methodName] The method to check for.\n * @returns {Function}\n */\nvar run = function (obj, methodName) {\n\tvar defaultRunnable = function () { return false;},\n\t\trunnable = methodName ? obj[methodName] : window[obj];\n\n\treturn typeof runnable === 'function' ? runnable : defaultRunnable;\n};\n\n/**\n * @desc For each in, shorthanded because manually writing hasOwnProperty each and every time is not a good use of time.\n * @static\n * @param obj\n * @param callback\n */\nvar forIn = function (obj, callback) {\n\tvar property;\n\tfor (property in obj) {\n\t\tif (obj.hasOwnProperty(property)) {\n\t\t\tif (callback(property, obj[property]) === false) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * @desc A substitute for Object.keys for when browsers don't attempt to convert non-objects to arrays\n * @static\n * @param obj\n * @returns {*}\n */\nvar keys = function (obj){\n\tif (obj) {\n\t\tswitch (typeof obj){\n\t\t\tcase 'object':\n\t\t\t\treturn Object.keys(obj);\n\t\t\tcase 'string':\n\t\t\t\treturn obj.split('');\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t} else {\n\t\tthrow new TypeError('Cannot convert null or undefined to object');\n\t}\n\n};\n\nmodule.exports = {\n\tcan: can,\n\thas: has,\n\trun: run,\n\town: own,\n\tforIn: forIn,\n\tkeys: keys\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adlibs/lib/canHas.js\n// module id = 71\n// module chunks = 2"],"sourceRoot":""}